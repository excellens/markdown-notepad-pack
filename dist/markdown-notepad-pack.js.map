{"version":3,"file":"markdown-notepad-pack.js","sources":["../node_modules/markdown-it/lib/common/entities.js","../node_modules/uc.micro/categories/P/regex.js","../node_modules/mdurl/encode.js","../node_modules/mdurl/decode.js","../node_modules/mdurl/format.js","../node_modules/mdurl/parse.js","../node_modules/mdurl/index.js","../node_modules/uc.micro/properties/Any/regex.js","../node_modules/uc.micro/categories/Cc/regex.js","../node_modules/uc.micro/categories/Cf/regex.js","../node_modules/uc.micro/categories/Z/regex.js","../node_modules/uc.micro/index.js","../node_modules/markdown-it/lib/common/utils.js","../node_modules/markdown-it/lib/helpers/parse_link_label.js","../node_modules/markdown-it/lib/helpers/parse_link_destination.js","../node_modules/markdown-it/lib/helpers/parse_link_title.js","../node_modules/markdown-it/lib/helpers/index.js","../node_modules/markdown-it/lib/renderer.js","../node_modules/markdown-it/lib/ruler.js","../node_modules/markdown-it/lib/rules_core/normalize.js","../node_modules/markdown-it/lib/rules_core/block.js","../node_modules/markdown-it/lib/rules_core/inline.js","../node_modules/markdown-it/lib/rules_core/linkify.js","../node_modules/markdown-it/lib/rules_core/replacements.js","../node_modules/markdown-it/lib/rules_core/smartquotes.js","../node_modules/markdown-it/lib/token.js","../node_modules/markdown-it/lib/rules_core/state_core.js","../node_modules/markdown-it/lib/parser_core.js","../node_modules/markdown-it/lib/rules_block/table.js","../node_modules/markdown-it/lib/rules_block/code.js","../node_modules/markdown-it/lib/rules_block/fence.js","../node_modules/markdown-it/lib/rules_block/blockquote.js","../node_modules/markdown-it/lib/rules_block/hr.js","../node_modules/markdown-it/lib/rules_block/list.js","../node_modules/markdown-it/lib/rules_block/reference.js","../node_modules/markdown-it/lib/rules_block/heading.js","../node_modules/markdown-it/lib/rules_block/lheading.js","../node_modules/markdown-it/lib/common/html_blocks.js","../node_modules/markdown-it/lib/common/html_re.js","../node_modules/markdown-it/lib/rules_block/html_block.js","../node_modules/markdown-it/lib/rules_block/paragraph.js","../node_modules/markdown-it/lib/rules_block/state_block.js","../node_modules/markdown-it/lib/parser_block.js","../node_modules/markdown-it/lib/rules_inline/text.js","../node_modules/markdown-it/lib/rules_inline/newline.js","../node_modules/markdown-it/lib/rules_inline/escape.js","../node_modules/markdown-it/lib/rules_inline/backticks.js","../node_modules/markdown-it/lib/rules_inline/strikethrough.js","../node_modules/markdown-it/lib/rules_inline/emphasis.js","../node_modules/markdown-it/lib/rules_inline/link.js","../node_modules/markdown-it/lib/rules_inline/image.js","../node_modules/markdown-it/lib/rules_inline/autolink.js","../node_modules/markdown-it/lib/rules_inline/html_inline.js","../node_modules/markdown-it/lib/rules_inline/entity.js","../node_modules/markdown-it/lib/rules_inline/balance_pairs.js","../node_modules/markdown-it/lib/rules_inline/text_collapse.js","../node_modules/markdown-it/lib/rules_inline/state_inline.js","../node_modules/markdown-it/lib/parser_inline.js","../node_modules/linkify-it/lib/re.js","../node_modules/linkify-it/index.js","../node_modules/rollup-plugin-node-polyfills/polyfills/punycode.js","../node_modules/markdown-it/lib/presets/default.js","../node_modules/markdown-it/lib/presets/zero.js","../node_modules/markdown-it/lib/presets/commonmark.js","../node_modules/markdown-it/lib/index.js","../node_modules/markdown-it/index.js","../node_modules/markdown-it-sub/index.js","../node_modules/markdown-it-sup/index.js","../node_modules/markdown-it-footnote/index.js","../node_modules/markdown-it-deflist/index.js","../node_modules/markdown-it-abbr/index.js","../node_modules/markdown-it-emoji/lib/data/shortcuts.js","../node_modules/markdown-it-emoji/lib/render.js","../node_modules/markdown-it-emoji/lib/replace.js","../node_modules/markdown-it-emoji/lib/normalize_opts.js","../node_modules/markdown-it-emoji/bare.js","../node_modules/markdown-it-emoji/index.js","../node_modules/markdown-it-container/index.js","../node_modules/markdown-it-ins/index.js","../node_modules/markdown-it-mark/index.js","../src/Main.js"],"sourcesContent":["// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .clone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * fence infostring\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  ch = state.src.charCodeAt(pos++);\n  if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, true);\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.tShift[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'meta',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?].*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style)(?=(\\s|>|$))/i, /<\\/(script|pre|style)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        state.pending = state.pending.replace(/ +$/, '');\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","// Parse backticks\n\n'use strict';\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, matchStart, matchEnd, token,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n\n  matchStart = matchEnd = pos;\n\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    if (matchEnd - matchStart === marker.length) {\n      if (!silent) {\n        token         = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += marker; }\n  state.pos += marker.length;\n  return true;\n};\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0, // disable \"rule of 3\" length checks meant for emphasis\n      jump:   i,\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // An amount of characters before this one that's equivalent to\n      // current one. In plain English: if this delimiter does not open\n      // an emphasis, neither do previous `jump` characters.\n      //\n      // Used to skip sequences like \"*****\" in one step, for 1st asterisk\n      // value will be 0, for 2nd it's 1 and so on.\n      //\n      jump:   i,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               delimiters[startDelim.end + 1].token === endDelim.token + 1 &&\n               delimiters[i - 1].marker === startDelim.marker;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      title,\n      token,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\nvar AUTOLINK_RE = /^<([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)>/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var tail, linkMatch, emailMatch, url, fullUrl, token,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  tail = state.src.slice(pos);\n\n  if (tail.indexOf('>') < 0) { return false; }\n\n  if (AUTOLINK_RE.test(tail)) {\n    linkMatch = tail.match(AUTOLINK_RE);\n\n    url = linkMatch[0].slice(1, -1);\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += linkMatch[0].length;\n    return true;\n  }\n\n  if (EMAIL_RE.test(tail)) {\n    emailMatch = tail.match(EMAIL_RE);\n\n    url = emailMatch[0].slice(1, -1);\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += emailMatch[0].length;\n    return true;\n  }\n\n  return false;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker and each delimiter length modulo 3.\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][closer.length % 3];\n    newMinOpenerIdx = -1;\n\n    openerIdx = closerIdx - closer.jump - 1;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= opener.jump + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (newMinOpenerIdx === -1) newMinOpenerIdx = openerIdx;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            delimiters[openerIdx - 1].jump + 1 :\n            0;\n\n          closer.jump  = closerIdx - openerIdx + lastJump;\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.jump  = lastJump;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.length || 0) % 3] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          '\\\\,(?!' + re.src_ZCc + ').|' +       // allow `,,,` in paths\n          '\\\\!+(?!' + re.src_ZCc + '|[!]).|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n\n\n/** Highest positive signed 32-bit float value */\nvar maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nvar base = 36;\nvar tMin = 1;\nvar tMax = 26;\nvar skew = 38;\nvar damp = 700;\nvar initialBias = 72;\nvar initialN = 128; // 0x80\nvar delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nvar regexPunycode = /^xn--/;\nvar regexNonASCII = /[^\\x20-\\x7E]/; // unprintable ASCII chars + non-ASCII chars\nvar regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nvar errors = {\n  'overflow': 'Overflow: input needs wider integers to process',\n  'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n  'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nvar baseMinusTMin = base - tMin;\nvar floor = Math.floor;\nvar stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n  throw new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n  var length = array.length;\n  var result = [];\n  while (length--) {\n    result[length] = fn(array[length]);\n  }\n  return result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n  var parts = string.split('@');\n  var result = '';\n  if (parts.length > 1) {\n    // In email addresses, only the domain name should be punycoded. Leave\n    // the local part (i.e. everything up to `@`) intact.\n    result = parts[0] + '@';\n    string = parts[1];\n  }\n  // Avoid `split(regex)` for IE8 compatibility. See #17.\n  string = string.replace(regexSeparators, '\\x2E');\n  var labels = string.split('.');\n  var encoded = map(labels, fn).join('.');\n  return result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n  var output = [],\n    counter = 0,\n    length = string.length,\n    value,\n    extra;\n  while (counter < length) {\n    value = string.charCodeAt(counter++);\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      // high surrogate, and there is a next character\n      extra = string.charCodeAt(counter++);\n      if ((extra & 0xFC00) == 0xDC00) { // low surrogate\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        // unmatched surrogate; only append this code unit, in case the next\n        // code unit is the high surrogate of a surrogate pair\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n  return output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nfunction ucs2encode(array) {\n  return map(array, function(value) {\n    var output = '';\n    if (value > 0xFFFF) {\n      value -= 0x10000;\n      output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n      value = 0xDC00 | value & 0x3FF;\n    }\n    output += stringFromCharCode(value);\n    return output;\n  }).join('');\n}\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nfunction basicToDigit(codePoint) {\n  if (codePoint - 48 < 10) {\n    return codePoint - 22;\n  }\n  if (codePoint - 65 < 26) {\n    return codePoint - 65;\n  }\n  if (codePoint - 97 < 26) {\n    return codePoint - 97;\n  }\n  return base;\n}\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nfunction digitToBasic(digit, flag) {\n  //  0..25 map to ASCII a..z or A..Z\n  // 26..35 map to ASCII 0..9\n  return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n}\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nfunction adapt(delta, numPoints, firstTime) {\n  var k = 0;\n  delta = firstTime ? floor(delta / damp) : delta >> 1;\n  delta += floor(delta / numPoints);\n  for ( /* no initialization */ ; delta > baseMinusTMin * tMax >> 1; k += base) {\n    delta = floor(delta / baseMinusTMin);\n  }\n  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n}\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nexport function decode(input) {\n  // Don't use UCS-2\n  var output = [],\n    inputLength = input.length,\n    out,\n    i = 0,\n    n = initialN,\n    bias = initialBias,\n    basic,\n    j,\n    index,\n    oldi,\n    w,\n    k,\n    digit,\n    t,\n    /** Cached calculation results */\n    baseMinusT;\n\n  // Handle the basic code points: let `basic` be the number of input code\n  // points before the last delimiter, or `0` if there is none, then copy\n  // the first basic code points to the output.\n\n  basic = input.lastIndexOf(delimiter);\n  if (basic < 0) {\n    basic = 0;\n  }\n\n  for (j = 0; j < basic; ++j) {\n    // if it's not a basic code point\n    if (input.charCodeAt(j) >= 0x80) {\n      error('not-basic');\n    }\n    output.push(input.charCodeAt(j));\n  }\n\n  // Main decoding loop: start just after the last delimiter if any basic code\n  // points were copied; start at the beginning otherwise.\n\n  for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */ ) {\n\n    // `index` is the index of the next character to be consumed.\n    // Decode a generalized variable-length integer into `delta`,\n    // which gets added to `i`. The overflow checking is easier\n    // if we increase `i` as we go, then subtract off its starting\n    // value at the end to obtain `delta`.\n    for (oldi = i, w = 1, k = base; /* no condition */ ; k += base) {\n\n      if (index >= inputLength) {\n        error('invalid-input');\n      }\n\n      digit = basicToDigit(input.charCodeAt(index++));\n\n      if (digit >= base || digit > floor((maxInt - i) / w)) {\n        error('overflow');\n      }\n\n      i += digit * w;\n      t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n      if (digit < t) {\n        break;\n      }\n\n      baseMinusT = base - t;\n      if (w > floor(maxInt / baseMinusT)) {\n        error('overflow');\n      }\n\n      w *= baseMinusT;\n\n    }\n\n    out = output.length + 1;\n    bias = adapt(i - oldi, out, oldi == 0);\n\n    // `i` was supposed to wrap around from `out` to `0`,\n    // incrementing `n` each time, so we'll fix that now:\n    if (floor(i / out) > maxInt - n) {\n      error('overflow');\n    }\n\n    n += floor(i / out);\n    i %= out;\n\n    // Insert `n` at position `i` of the output\n    output.splice(i++, 0, n);\n\n  }\n\n  return ucs2encode(output);\n}\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nexport function encode(input) {\n  var n,\n    delta,\n    handledCPCount,\n    basicLength,\n    bias,\n    j,\n    m,\n    q,\n    k,\n    t,\n    currentValue,\n    output = [],\n    /** `inputLength` will hold the number of code points in `input`. */\n    inputLength,\n    /** Cached calculation results */\n    handledCPCountPlusOne,\n    baseMinusT,\n    qMinusT;\n\n  // Convert the input in UCS-2 to Unicode\n  input = ucs2decode(input);\n\n  // Cache the length\n  inputLength = input.length;\n\n  // Initialize the state\n  n = initialN;\n  delta = 0;\n  bias = initialBias;\n\n  // Handle the basic code points\n  for (j = 0; j < inputLength; ++j) {\n    currentValue = input[j];\n    if (currentValue < 0x80) {\n      output.push(stringFromCharCode(currentValue));\n    }\n  }\n\n  handledCPCount = basicLength = output.length;\n\n  // `handledCPCount` is the number of code points that have been handled;\n  // `basicLength` is the number of basic code points.\n\n  // Finish the basic string - if it is not empty - with a delimiter\n  if (basicLength) {\n    output.push(delimiter);\n  }\n\n  // Main encoding loop:\n  while (handledCPCount < inputLength) {\n\n    // All non-basic code points < n have been handled already. Find the next\n    // larger one:\n    for (m = maxInt, j = 0; j < inputLength; ++j) {\n      currentValue = input[j];\n      if (currentValue >= n && currentValue < m) {\n        m = currentValue;\n      }\n    }\n\n    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n    // but guard against overflow\n    handledCPCountPlusOne = handledCPCount + 1;\n    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n      error('overflow');\n    }\n\n    delta += (m - n) * handledCPCountPlusOne;\n    n = m;\n\n    for (j = 0; j < inputLength; ++j) {\n      currentValue = input[j];\n\n      if (currentValue < n && ++delta > maxInt) {\n        error('overflow');\n      }\n\n      if (currentValue == n) {\n        // Represent delta as a generalized variable-length integer\n        for (q = delta, k = base; /* no condition */ ; k += base) {\n          t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n          if (q < t) {\n            break;\n          }\n          qMinusT = q - t;\n          baseMinusT = base - t;\n          output.push(\n            stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n          );\n          q = floor(qMinusT / baseMinusT);\n        }\n\n        output.push(stringFromCharCode(digitToBasic(q, 0)));\n        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n        delta = 0;\n        ++handledCPCount;\n      }\n    }\n\n    ++delta;\n    ++n;\n\n  }\n  return output.join('');\n}\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nexport function toUnicode(input) {\n  return mapDomain(input, function(string) {\n    return regexPunycode.test(string) ?\n      decode(string.slice(4).toLowerCase()) :\n      string;\n  });\n}\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nexport function toASCII(input) {\n  return mapDomain(input, function(string) {\n    return regexNonASCII.test(string) ?\n      'xn--' + encode(string) :\n      string;\n  });\n}\nexport var version = '1.4.1';\n/**\n * An object of methods to convert from JavaScript's internal character\n * representation (UCS-2) to Unicode code points, and back.\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode\n * @type Object\n */\n\nexport var ucs2 = {\n  decode: ucs2decode,\n  encode: ucs2encode\n};\nexport default {\n  version: version,\n  ucs2: ucs2,\n  toASCII: toASCII,\n  toUnicode: toUnicode,\n  encode: encode,\n  decode: decode\n}\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(lang, str, true).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(lang, str, true).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","// Process ~subscript~\n\n'use strict';\n\n// same as UNESCAPE_MD_RE plus a space\nvar UNESCAPE_RE = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\n\nfunction subscript(state, silent) {\n  var found,\n      content,\n      token,\n      max = state.posMax,\n      start = state.pos;\n\n  if (state.src.charCodeAt(start) !== 0x7E/* ~ */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 2 >= max) { return false; }\n\n  state.pos = start + 1;\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === 0x7E/* ~ */) {\n      found = true;\n      break;\n    }\n\n    state.md.inline.skipToken(state);\n  }\n\n  if (!found || start + 1 === state.pos) {\n    state.pos = start;\n    return false;\n  }\n\n  content = state.src.slice(start + 1, state.pos);\n\n  // don't allow unescaped spaces/newlines inside\n  if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 1;\n\n  // Earlier we checked !silent, but this implementation does not need it\n  token         = state.push('sub_open', 'sub', 1);\n  token.markup  = '~';\n\n  token         = state.push('text', '', 0);\n  token.content = content.replace(UNESCAPE_RE, '$1');\n\n  token         = state.push('sub_close', 'sub', -1);\n  token.markup  = '~';\n\n  state.pos = state.posMax + 1;\n  state.posMax = max;\n  return true;\n}\n\n\nmodule.exports = function sub_plugin(md) {\n  md.inline.ruler.after('emphasis', 'sub', subscript);\n};\n","// Process ^superscript^\n\n'use strict';\n\n// same as UNESCAPE_MD_RE plus a space\nvar UNESCAPE_RE = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\nfunction superscript(state, silent) {\n  var found,\n      content,\n      token,\n      max = state.posMax,\n      start = state.pos;\n\n  if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 2 >= max) { return false; }\n\n  state.pos = start + 1;\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === 0x5E/* ^ */) {\n      found = true;\n      break;\n    }\n\n    state.md.inline.skipToken(state);\n  }\n\n  if (!found || start + 1 === state.pos) {\n    state.pos = start;\n    return false;\n  }\n\n  content = state.src.slice(start + 1, state.pos);\n\n  // don't allow unescaped spaces/newlines inside\n  if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 1;\n\n  // Earlier we checked !silent, but this implementation does not need it\n  token         = state.push('sup_open', 'sup', 1);\n  token.markup  = '^';\n\n  token         = state.push('text', '', 0);\n  token.content = content.replace(UNESCAPE_RE, '$1');\n\n  token         = state.push('sup_close', 'sup', -1);\n  token.markup  = '^';\n\n  state.pos = state.posMax + 1;\n  state.posMax = max;\n  return true;\n}\n\n\nmodule.exports = function sup_plugin(md) {\n  md.inline.ruler.after('emphasis', 'sup', superscript);\n};\n","// Process footnotes\n//\n'use strict';\n\n////////////////////////////////////////////////////////////////////////////////\n// Renderer partials\n\nfunction render_footnote_anchor_name(tokens, idx, options, env/*, slf*/) {\n  var n = Number(tokens[idx].meta.id + 1).toString();\n  var prefix = '';\n\n  if (typeof env.docId === 'string') {\n    prefix = '-' + env.docId + '-';\n  }\n\n  return prefix + n;\n}\n\nfunction render_footnote_caption(tokens, idx/*, options, env, slf*/) {\n  var n = Number(tokens[idx].meta.id + 1).toString();\n\n  if (tokens[idx].meta.subId > 0) {\n    n += ':' + tokens[idx].meta.subId;\n  }\n\n  return '[' + n + ']';\n}\n\nfunction render_footnote_ref(tokens, idx, options, env, slf) {\n  var id      = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf);\n  var caption = slf.rules.footnote_caption(tokens, idx, options, env, slf);\n  var refid   = id;\n\n  if (tokens[idx].meta.subId > 0) {\n    refid += ':' + tokens[idx].meta.subId;\n  }\n\n  return '<sup class=\"footnote-ref\"><a href=\"#fn' + id + '\" id=\"fnref' + refid + '\">' + caption + '</a></sup>';\n}\n\nfunction render_footnote_block_open(tokens, idx, options) {\n  return (options.xhtmlOut ? '<hr class=\"footnotes-sep\" />\\n' : '<hr class=\"footnotes-sep\">\\n') +\n         '<section class=\"footnotes\">\\n' +\n         '<ol class=\"footnotes-list\">\\n';\n}\n\nfunction render_footnote_block_close() {\n  return '</ol>\\n</section>\\n';\n}\n\nfunction render_footnote_open(tokens, idx, options, env, slf) {\n  var id = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf);\n\n  if (tokens[idx].meta.subId > 0) {\n    id += ':' + tokens[idx].meta.subId;\n  }\n\n  return '<li id=\"fn' + id + '\" class=\"footnote-item\">';\n}\n\nfunction render_footnote_close() {\n  return '</li>\\n';\n}\n\nfunction render_footnote_anchor(tokens, idx, options, env, slf) {\n  var id = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf);\n\n  if (tokens[idx].meta.subId > 0) {\n    id += ':' + tokens[idx].meta.subId;\n  }\n\n  /* ↩ with escape code to prevent display as Apple Emoji on iOS */\n  return ' <a href=\"#fnref' + id + '\" class=\"footnote-backref\">\\u21a9\\uFE0E</a>';\n}\n\n\nmodule.exports = function footnote_plugin(md) {\n  var parseLinkLabel = md.helpers.parseLinkLabel,\n      isSpace = md.utils.isSpace;\n\n  md.renderer.rules.footnote_ref          = render_footnote_ref;\n  md.renderer.rules.footnote_block_open   = render_footnote_block_open;\n  md.renderer.rules.footnote_block_close  = render_footnote_block_close;\n  md.renderer.rules.footnote_open         = render_footnote_open;\n  md.renderer.rules.footnote_close        = render_footnote_close;\n  md.renderer.rules.footnote_anchor       = render_footnote_anchor;\n\n  // helpers (only used in other rules, no tokens are attached to those)\n  md.renderer.rules.footnote_caption      = render_footnote_caption;\n  md.renderer.rules.footnote_anchor_name  = render_footnote_anchor_name;\n\n  // Process footnote block definition\n  function footnote_def(state, startLine, endLine, silent) {\n    var oldBMark, oldTShift, oldSCount, oldParentType, pos, label, token,\n        initial, offset, ch, posAfterColon,\n        start = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    // line should be at least 5 chars - \"[^x]:\"\n    if (start + 4 > max) { return false; }\n\n    if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x20) { return false; }\n      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n        break;\n      }\n    }\n\n    if (pos === start + 2) { return false; } // no empty footnote labels\n    if (pos + 1 >= max || state.src.charCodeAt(++pos) !== 0x3A /* : */) { return false; }\n    if (silent) { return true; }\n    pos++;\n\n    if (!state.env.footnotes) { state.env.footnotes = {}; }\n    if (!state.env.footnotes.refs) { state.env.footnotes.refs = {}; }\n    label = state.src.slice(start + 2, pos - 2);\n    state.env.footnotes.refs[':' + label] = -1;\n\n    token       = new state.Token('footnote_reference_open', '', 1);\n    token.meta  = { label: label };\n    token.level = state.level++;\n    state.tokens.push(token);\n\n    oldBMark = state.bMarks[startLine];\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n    oldParentType = state.parentType;\n\n    posAfterColon = pos;\n    initial = offset = state.sCount[startLine] + pos - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    state.tShift[startLine] = pos - posAfterColon;\n    state.sCount[startLine] = offset - initial;\n\n    state.bMarks[startLine] = posAfterColon;\n    state.blkIndent += 4;\n    state.parentType = 'footnote';\n\n    if (state.sCount[startLine] < state.blkIndent) {\n      state.sCount[startLine] += state.blkIndent;\n    }\n\n    state.md.block.tokenize(state, startLine, endLine, true);\n\n    state.parentType = oldParentType;\n    state.blkIndent -= 4;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.bMarks[startLine] = oldBMark;\n\n    token       = new state.Token('footnote_reference_close', '', -1);\n    token.level = --state.level;\n    state.tokens.push(token);\n\n    return true;\n  }\n\n  // Process inline footnotes (^[...])\n  function footnote_inline(state, silent) {\n    var labelStart,\n        labelEnd,\n        footnoteId,\n        token,\n        tokens,\n        max = state.posMax,\n        start = state.pos;\n\n    if (start + 2 >= max) { return false; }\n    if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5B/* [ */) { return false; }\n\n    labelStart = start + 2;\n    labelEnd = parseLinkLabel(state, start + 1);\n\n    // parser failed to find ']', so it's not a valid note\n    if (labelEnd < 0) { return false; }\n\n    // We found the end of the link, and know for a fact it's a valid link;\n    // so all that's left to do is to call tokenizer.\n    //\n    if (!silent) {\n      if (!state.env.footnotes) { state.env.footnotes = {}; }\n      if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n      footnoteId = state.env.footnotes.list.length;\n\n      state.md.inline.parse(\n        state.src.slice(labelStart, labelEnd),\n        state.md,\n        state.env,\n        tokens = []\n      );\n\n      token      = state.push('footnote_ref', '', 0);\n      token.meta = { id: footnoteId };\n\n      state.env.footnotes.list[footnoteId] = {\n        content: state.src.slice(labelStart, labelEnd),\n        tokens: tokens\n      };\n    }\n\n    state.pos = labelEnd + 1;\n    state.posMax = max;\n    return true;\n  }\n\n  // Process footnote references ([^...])\n  function footnote_ref(state, silent) {\n    var label,\n        pos,\n        footnoteId,\n        footnoteSubId,\n        token,\n        max = state.posMax,\n        start = state.pos;\n\n    // should be at least 4 chars - \"[^x]\"\n    if (start + 3 > max) { return false; }\n\n    if (!state.env.footnotes || !state.env.footnotes.refs) { return false; }\n    if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x20) { return false; }\n      if (state.src.charCodeAt(pos) === 0x0A) { return false; }\n      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n        break;\n      }\n    }\n\n    if (pos === start + 2) { return false; } // no empty footnote labels\n    if (pos >= max) { return false; }\n    pos++;\n\n    label = state.src.slice(start + 2, pos - 1);\n    if (typeof state.env.footnotes.refs[':' + label] === 'undefined') { return false; }\n\n    if (!silent) {\n      if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n\n      if (state.env.footnotes.refs[':' + label] < 0) {\n        footnoteId = state.env.footnotes.list.length;\n        state.env.footnotes.list[footnoteId] = { label: label, count: 0 };\n        state.env.footnotes.refs[':' + label] = footnoteId;\n      } else {\n        footnoteId = state.env.footnotes.refs[':' + label];\n      }\n\n      footnoteSubId = state.env.footnotes.list[footnoteId].count;\n      state.env.footnotes.list[footnoteId].count++;\n\n      token      = state.push('footnote_ref', '', 0);\n      token.meta = { id: footnoteId, subId: footnoteSubId, label: label };\n    }\n\n    state.pos = pos;\n    state.posMax = max;\n    return true;\n  }\n\n  // Glue footnote tokens to end of token stream\n  function footnote_tail(state) {\n    var i, l, j, t, lastParagraph, list, token, tokens, current, currentLabel,\n        insideRef = false,\n        refTokens = {};\n\n    if (!state.env.footnotes) { return; }\n\n    state.tokens = state.tokens.filter(function (tok) {\n      if (tok.type === 'footnote_reference_open') {\n        insideRef = true;\n        current = [];\n        currentLabel = tok.meta.label;\n        return false;\n      }\n      if (tok.type === 'footnote_reference_close') {\n        insideRef = false;\n        // prepend ':' to avoid conflict with Object.prototype members\n        refTokens[':' + currentLabel] = current;\n        return false;\n      }\n      if (insideRef) { current.push(tok); }\n      return !insideRef;\n    });\n\n    if (!state.env.footnotes.list) { return; }\n    list = state.env.footnotes.list;\n\n    token = new state.Token('footnote_block_open', '', 1);\n    state.tokens.push(token);\n\n    for (i = 0, l = list.length; i < l; i++) {\n      token      = new state.Token('footnote_open', '', 1);\n      token.meta = { id: i, label: list[i].label };\n      state.tokens.push(token);\n\n      if (list[i].tokens) {\n        tokens = [];\n\n        token          = new state.Token('paragraph_open', 'p', 1);\n        token.block    = true;\n        tokens.push(token);\n\n        token          = new state.Token('inline', '', 0);\n        token.children = list[i].tokens;\n        token.content  = list[i].content;\n        tokens.push(token);\n\n        token          = new state.Token('paragraph_close', 'p', -1);\n        token.block    = true;\n        tokens.push(token);\n\n      } else if (list[i].label) {\n        tokens = refTokens[':' + list[i].label];\n      }\n\n      state.tokens = state.tokens.concat(tokens);\n      if (state.tokens[state.tokens.length - 1].type === 'paragraph_close') {\n        lastParagraph = state.tokens.pop();\n      } else {\n        lastParagraph = null;\n      }\n\n      t = list[i].count > 0 ? list[i].count : 1;\n      for (j = 0; j < t; j++) {\n        token      = new state.Token('footnote_anchor', '', 0);\n        token.meta = { id: i, subId: j, label: list[i].label };\n        state.tokens.push(token);\n      }\n\n      if (lastParagraph) {\n        state.tokens.push(lastParagraph);\n      }\n\n      token = new state.Token('footnote_close', '', -1);\n      state.tokens.push(token);\n    }\n\n    token = new state.Token('footnote_block_close', '', -1);\n    state.tokens.push(token);\n  }\n\n  md.block.ruler.before('reference', 'footnote_def', footnote_def, { alt: [ 'paragraph', 'reference' ] });\n  md.inline.ruler.after('image', 'footnote_inline', footnote_inline);\n  md.inline.ruler.after('footnote_inline', 'footnote_ref', footnote_ref);\n  md.core.ruler.after('inline', 'footnote_tail', footnote_tail);\n};\n","// Process definition lists\n//\n'use strict';\n\n\nmodule.exports = function deflist_plugin(md) {\n  var isSpace = md.utils.isSpace;\n\n  // Search `[:~][\\n ]`, returns next pos after marker on success\n  // or -1 on fail.\n  function skipMarker(state, line) {\n    var pos, marker,\n        start = state.bMarks[line] + state.tShift[line],\n        max = state.eMarks[line];\n\n    if (start >= max) { return -1; }\n\n    // Check bullet\n    marker = state.src.charCodeAt(start++);\n    if (marker !== 0x7E/* ~ */ && marker !== 0x3A/* : */) { return -1; }\n\n    pos = state.skipSpaces(start);\n\n    // require space after \":\"\n    if (start === pos) { return -1; }\n\n    // no empty definitions, e.g. \"  : \"\n    if (pos >= max) { return -1; }\n\n    return start;\n  }\n\n  function markTightParagraphs(state, idx) {\n    var i, l,\n        level = state.level + 2;\n\n    for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n      if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n        state.tokens[i + 2].hidden = true;\n        state.tokens[i].hidden = true;\n        i += 2;\n      }\n    }\n  }\n\n  function deflist(state, startLine, endLine, silent) {\n    var ch,\n        contentStart,\n        ddLine,\n        dtLine,\n        itemLines,\n        listLines,\n        listTokIdx,\n        max,\n        nextLine,\n        offset,\n        oldDDIndent,\n        oldIndent,\n        oldParentType,\n        oldSCount,\n        oldTShift,\n        oldTight,\n        pos,\n        prevEmptyEnd,\n        tight,\n        token;\n\n    if (silent) {\n      // quirk: validation mode validates a dd block only, not a whole deflist\n      if (state.ddIndent < 0) { return false; }\n      return skipMarker(state, startLine) >= 0;\n    }\n\n    nextLine = startLine + 1;\n    if (nextLine >= endLine) { return false; }\n\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      if (nextLine >= endLine) { return false; }\n    }\n\n    if (state.sCount[nextLine] < state.blkIndent) { return false; }\n    contentStart = skipMarker(state, nextLine);\n    if (contentStart < 0) { return false; }\n\n    // Start list\n    listTokIdx = state.tokens.length;\n    tight = true;\n\n    token     = state.push('dl_open', 'dl', 1);\n    token.map = listLines = [ startLine, 0 ];\n\n    //\n    // Iterate list items\n    //\n\n    dtLine = startLine;\n    ddLine = nextLine;\n\n    // One definition list can contain multiple DTs,\n    // and one DT can be followed by multiple DDs.\n    //\n    // Thus, there is two loops here, and label is\n    // needed to break out of the second one\n    //\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    for (;;) {\n      prevEmptyEnd = false;\n\n      token          = state.push('dt_open', 'dt', 1);\n      token.map      = [ dtLine, dtLine ];\n\n      token          = state.push('inline', '', 0);\n      token.map      = [ dtLine, dtLine ];\n      token.content  = state.getLines(dtLine, dtLine + 1, state.blkIndent, false).trim();\n      token.children = [];\n\n      token          = state.push('dt_close', 'dt', -1);\n\n      for (;;) {\n        token     = state.push('dd_open', 'dd', 1);\n        token.map = itemLines = [ nextLine, 0 ];\n\n        pos = contentStart;\n        max = state.eMarks[ddLine];\n        offset = state.sCount[ddLine] + contentStart - (state.bMarks[ddLine] + state.tShift[ddLine]);\n\n        while (pos < max) {\n          ch = state.src.charCodeAt(pos);\n\n          if (isSpace(ch)) {\n            if (ch === 0x09) {\n              offset += 4 - offset % 4;\n            } else {\n              offset++;\n            }\n          } else {\n            break;\n          }\n\n          pos++;\n        }\n\n        contentStart = pos;\n\n        oldTight = state.tight;\n        oldDDIndent = state.ddIndent;\n        oldIndent = state.blkIndent;\n        oldTShift = state.tShift[ddLine];\n        oldSCount = state.sCount[ddLine];\n        oldParentType = state.parentType;\n        state.blkIndent = state.ddIndent = state.sCount[ddLine] + 2;\n        state.tShift[ddLine] = contentStart - state.bMarks[ddLine];\n        state.sCount[ddLine] = offset;\n        state.tight = true;\n        state.parentType = 'deflist';\n\n        state.md.block.tokenize(state, ddLine, endLine, true);\n\n        // If any of list item is tight, mark list as tight\n        if (!state.tight || prevEmptyEnd) {\n          tight = false;\n        }\n        // Item become loose if finish with empty line,\n        // but we should filter last element, because it means list finish\n        prevEmptyEnd = (state.line - ddLine) > 1 && state.isEmpty(state.line - 1);\n\n        state.tShift[ddLine] = oldTShift;\n        state.sCount[ddLine] = oldSCount;\n        state.tight = oldTight;\n        state.parentType = oldParentType;\n        state.blkIndent = oldIndent;\n        state.ddIndent = oldDDIndent;\n\n        token = state.push('dd_close', 'dd', -1);\n\n        itemLines[1] = nextLine = state.line;\n\n        if (nextLine >= endLine) { break OUTER; }\n\n        if (state.sCount[nextLine] < state.blkIndent) { break OUTER; }\n        contentStart = skipMarker(state, nextLine);\n        if (contentStart < 0) { break; }\n\n        ddLine = nextLine;\n\n        // go to the next loop iteration:\n        // insert DD tag and repeat checking\n      }\n\n      if (nextLine >= endLine) { break; }\n      dtLine = nextLine;\n\n      if (state.isEmpty(dtLine)) { break; }\n      if (state.sCount[dtLine] < state.blkIndent) { break; }\n\n      ddLine = dtLine + 1;\n      if (ddLine >= endLine) { break; }\n      if (state.isEmpty(ddLine)) { ddLine++; }\n      if (ddLine >= endLine) { break; }\n\n      if (state.sCount[ddLine] < state.blkIndent) { break; }\n      contentStart = skipMarker(state, ddLine);\n      if (contentStart < 0) { break; }\n\n      // go to the next loop iteration:\n      // insert DT and DD tags and repeat checking\n    }\n\n    // Finilize list\n    token = state.push('dl_close', 'dl', -1);\n\n    listLines[1] = nextLine;\n\n    state.line = nextLine;\n\n    // mark paragraphs tight if needed\n    if (tight) {\n      markTightParagraphs(state, listTokIdx);\n    }\n\n    return true;\n  }\n\n\n  md.block.ruler.before('paragraph', 'deflist', deflist, { alt: [ 'paragraph', 'reference', 'blockquote' ] });\n};\n","// Enclose abbreviations in <abbr> tags\n//\n'use strict';\n\n\nmodule.exports = function sub_plugin(md) {\n  var escapeRE        = md.utils.escapeRE,\n      arrayReplaceAt  = md.utils.arrayReplaceAt;\n\n  // ASCII characters in Cc, Sc, Sm, Sk categories we should terminate on;\n  // you can check character classes here:\n  // http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\n  var OTHER_CHARS      = ' \\r\\n$+<=>^`|~';\n\n  var UNICODE_PUNCT_RE = md.utils.lib.ucmicro.P.source;\n  var UNICODE_SPACE_RE = md.utils.lib.ucmicro.Z.source;\n\n\n  function abbr_def(state, startLine, endLine, silent) {\n    var label, title, ch, labelStart, labelEnd,\n        pos = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    if (pos + 2 >= max) { return false; }\n\n    if (state.src.charCodeAt(pos++) !== 0x2A/* * */) { return false; }\n    if (state.src.charCodeAt(pos++) !== 0x5B/* [ */) { return false; }\n\n    labelStart = pos;\n\n    for (; pos < max; pos++) {\n      ch = state.src.charCodeAt(pos);\n      if (ch === 0x5B /* [ */) {\n        return false;\n      } else if (ch === 0x5D /* ] */) {\n        labelEnd = pos;\n        break;\n      } else if (ch === 0x5C /* \\ */) {\n        pos++;\n      }\n    }\n\n    if (labelEnd < 0 || state.src.charCodeAt(labelEnd + 1) !== 0x3A/* : */) {\n      return false;\n    }\n\n    if (silent) { return true; }\n\n    label = state.src.slice(labelStart, labelEnd).replace(/\\\\(.)/g, '$1');\n    title = state.src.slice(labelEnd + 2, max).trim();\n    if (label.length === 0) { return false; }\n    if (title.length === 0) { return false; }\n    if (!state.env.abbreviations) { state.env.abbreviations = {}; }\n    // prepend ':' to avoid conflict with Object.prototype members\n    if (typeof state.env.abbreviations[':' + label] === 'undefined') {\n      state.env.abbreviations[':' + label] = title;\n    }\n\n    state.line = startLine + 1;\n    return true;\n  }\n\n\n  function abbr_replace(state) {\n    var i, j, l, tokens, token, text, nodes, pos, reg, m, regText, regSimple,\n        currentToken,\n        blockTokens = state.tokens;\n\n    if (!state.env.abbreviations) { return; }\n\n    regSimple = new RegExp('(?:' +\n      Object.keys(state.env.abbreviations).map(function (x) {\n        return x.substr(1);\n      }).sort(function (a, b) {\n        return b.length - a.length;\n      }).map(escapeRE).join('|') +\n    ')');\n\n    regText = '(^|' + UNICODE_PUNCT_RE + '|' + UNICODE_SPACE_RE +\n                    '|[' + OTHER_CHARS.split('').map(escapeRE).join('') + '])'\n            + '(' + Object.keys(state.env.abbreviations).map(function (x) {\n                      return x.substr(1);\n                    }).sort(function (a, b) {\n                      return b.length - a.length;\n                    }).map(escapeRE).join('|') + ')'\n            + '($|' + UNICODE_PUNCT_RE + '|' + UNICODE_SPACE_RE +\n                    '|[' + OTHER_CHARS.split('').map(escapeRE).join('') + '])';\n\n    reg = new RegExp(regText, 'g');\n\n    for (j = 0, l = blockTokens.length; j < l; j++) {\n      if (blockTokens[j].type !== 'inline') { continue; }\n      tokens = blockTokens[j].children;\n\n      // We scan from the end, to keep position when new tags added.\n      for (i = tokens.length - 1; i >= 0; i--) {\n        currentToken = tokens[i];\n        if (currentToken.type !== 'text') { continue; }\n\n        pos = 0;\n        text = currentToken.content;\n        reg.lastIndex = 0;\n        nodes = [];\n\n        // fast regexp run to determine whether there are any abbreviated words\n        // in the current token\n        if (!regSimple.test(text)) { continue; }\n\n        while ((m = reg.exec(text))) {\n          if (m.index > 0 || m[1].length > 0) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(pos, m.index + m[1].length);\n            nodes.push(token);\n          }\n\n          token         = new state.Token('abbr_open', 'abbr', 1);\n          token.attrs   = [ [ 'title', state.env.abbreviations[':' + m[2]] ] ];\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = m[2];\n          nodes.push(token);\n\n          token         = new state.Token('abbr_close', 'abbr', -1);\n          nodes.push(token);\n\n          reg.lastIndex -= m[3].length;\n          pos = reg.lastIndex;\n        }\n\n        if (!nodes.length) { continue; }\n\n        if (pos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(pos);\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n\n  md.block.ruler.before('reference', 'abbr_def', abbr_def, { alt: [ 'paragraph', 'reference' ] });\n\n  md.core.ruler.after('linkify', 'abbr_replace', abbr_replace);\n};\n","// Emoticons -> Emoji mapping.\n//\n// (!) Some patterns skipped, to avoid collisions\n// without increase matcher complicity. Than can change in future.\n//\n// Places to look for more emoticons info:\n//\n// - http://en.wikipedia.org/wiki/List_of_emoticons#Western\n// - https://github.com/wooorm/emoticon/blob/master/Support.md\n// - http://factoryjoe.com/projects/emoticons/\n//\n'use strict';\n\nmodule.exports = {\n  angry:            [ '>:(', '>:-(' ],\n  blush:            [ ':\")', ':-\")' ],\n  broken_heart:     [ '</3', '<\\\\3' ],\n  // :\\ and :-\\ not used because of conflict with markdown escaping\n  confused:         [ ':/', ':-/' ], // twemoji shows question\n  cry:              [ \":'(\", \":'-(\", ':,(', ':,-(' ],\n  frowning:         [ ':(', ':-(' ],\n  heart:            [ '<3' ],\n  imp:              [ ']:(', ']:-(' ],\n  innocent:         [ 'o:)', 'O:)', 'o:-)', 'O:-)', '0:)', '0:-)' ],\n  joy:              [ \":')\", \":'-)\", ':,)', ':,-)', \":'D\", \":'-D\", ':,D', ':,-D' ],\n  kissing:          [ ':*', ':-*' ],\n  laughing:         [ 'x-)', 'X-)' ],\n  neutral_face:     [ ':|', ':-|' ],\n  open_mouth:       [ ':o', ':-o', ':O', ':-O' ],\n  rage:             [ ':@', ':-@' ],\n  smile:            [ ':D', ':-D' ],\n  smiley:           [ ':)', ':-)' ],\n  smiling_imp:      [ ']:)', ']:-)' ],\n  sob:              [ \":,'(\", \":,'-(\", ';(', ';-(' ],\n  stuck_out_tongue: [ ':P', ':-P' ],\n  sunglasses:       [ '8-)', 'B-)' ],\n  sweat:            [ ',:(', ',:-(' ],\n  sweat_smile:      [ ',:)', ',:-)' ],\n  unamused:         [ ':s', ':-S', ':z', ':-Z', ':$', ':-$' ],\n  wink:             [ ';)', ';-)' ]\n};\n","'use strict';\n\nmodule.exports = function emoji_html(tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n","// Emojies & shortcuts replacement logic.\n//\n// Note: In theory, it could be faster to parse :smile: in inline chain and\n// leave only shortcuts here. But, who care...\n//\n\n'use strict';\n\n\nmodule.exports = function create_rule(md, emojies, shortcuts, scanRE, replaceRE) {\n  var arrayReplaceAt = md.utils.arrayReplaceAt,\n      ucm = md.utils.lib.ucmicro,\n      ZPCc = new RegExp([ ucm.Z.source, ucm.P.source, ucm.Cc.source ].join('|'));\n\n  function splitTextToken(text, level, Token) {\n    var token, last_pos = 0, nodes = [];\n\n    text.replace(replaceRE, function (match, offset, src) {\n      var emoji_name;\n      // Validate emoji name\n      if (shortcuts.hasOwnProperty(match)) {\n        // replace shortcut with full name\n        emoji_name = shortcuts[match];\n\n        // Don't allow letters before any shortcut (as in no \":/\" in http://)\n        if (offset > 0 && !ZPCc.test(src[offset - 1])) {\n          return;\n        }\n\n        // Don't allow letters after any shortcut\n        if (offset + match.length < src.length && !ZPCc.test(src[offset + match.length])) {\n          return;\n        }\n      } else {\n        emoji_name = match.slice(1, -1);\n      }\n\n      // Add new tokens to pending list\n      if (offset > last_pos) {\n        token         = new Token('text', '', 0);\n        token.content = text.slice(last_pos, offset);\n        nodes.push(token);\n      }\n\n      token         = new Token('emoji', '', 0);\n      token.markup  = emoji_name;\n      token.content = emojies[emoji_name];\n      nodes.push(token);\n\n      last_pos = offset + match.length;\n    });\n\n    if (last_pos < text.length) {\n      token         = new Token('text', '', 0);\n      token.content = text.slice(last_pos);\n      nodes.push(token);\n    }\n\n    return nodes;\n  }\n\n  return function emoji_replace(state) {\n    var i, j, l, tokens, token,\n        blockTokens = state.tokens,\n        autolinkLevel = 0;\n\n    for (j = 0, l = blockTokens.length; j < l; j++) {\n      if (blockTokens[j].type !== 'inline') { continue; }\n      tokens = blockTokens[j].children;\n\n      // We scan from the end, to keep position when new tags added.\n      // Use reversed logic in links start/end match\n      for (i = tokens.length - 1; i >= 0; i--) {\n        token = tokens[i];\n\n        if (token.type === 'link_open' || token.type === 'link_close') {\n          if (token.info === 'auto') { autolinkLevel -= token.nesting; }\n        }\n\n        if (token.type === 'text' && autolinkLevel === 0 && scanRE.test(token.content)) {\n          // replace current node\n          blockTokens[j].children = tokens = arrayReplaceAt(\n            tokens, i, splitTextToken(token.content, token.level, state.Token)\n          );\n        }\n      }\n    }\n  };\n};\n","// Convert input options to more useable format\n// and compile search regexp\n\n'use strict';\n\n\nfunction quoteRE(str) {\n  return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&');\n}\n\n\nmodule.exports = function normalize_opts(options) {\n  var emojies = options.defs,\n      shortcuts;\n\n  // Filter emojies by whitelist, if needed\n  if (options.enabled.length) {\n    emojies = Object.keys(emojies).reduce(function (acc, key) {\n      if (options.enabled.indexOf(key) >= 0) {\n        acc[key] = emojies[key];\n      }\n      return acc;\n    }, {});\n  }\n\n  // Flatten shortcuts to simple object: { alias: emoji_name }\n  shortcuts = Object.keys(options.shortcuts).reduce(function (acc, key) {\n    // Skip aliases for filtered emojies, to reduce regexp\n    if (!emojies[key]) { return acc; }\n\n    if (Array.isArray(options.shortcuts[key])) {\n      options.shortcuts[key].forEach(function (alias) {\n        acc[alias] = key;\n      });\n      return acc;\n    }\n\n    acc[options.shortcuts[key]] = key;\n    return acc;\n  }, {});\n\n  var keys = Object.keys(emojies),\n      names;\n\n  // If no definitions are given, return empty regex to avoid replacements with 'undefined'.\n  if (keys.length === 0) {\n    names = '^$';\n  } else {\n    // Compile regexp\n    names = keys\n      .map(function (name) { return ':' + name + ':'; })\n      .concat(Object.keys(shortcuts))\n      .sort()\n      .reverse()\n      .map(function (name) { return quoteRE(name); })\n      .join('|');\n  }\n  var scanRE = RegExp(names);\n  var replaceRE = RegExp(names, 'g');\n\n  return {\n    defs: emojies,\n    shortcuts: shortcuts,\n    scanRE: scanRE,\n    replaceRE: replaceRE\n  };\n};\n","'use strict';\n\n\nvar emoji_html        = require('./lib/render');\nvar emoji_replace     = require('./lib/replace');\nvar normalize_opts    = require('./lib/normalize_opts');\n\n\nmodule.exports = function emoji_plugin(md, options) {\n  var defaults = {\n    defs: {},\n    shortcuts: {},\n    enabled: []\n  };\n\n  var opts = normalize_opts(md.utils.assign({}, defaults, options || {}));\n\n  md.renderer.rules.emoji = emoji_html;\n\n  md.core.ruler.push('emoji', emoji_replace(md, opts.defs, opts.shortcuts, opts.scanRE, opts.replaceRE));\n};\n","'use strict';\n\n\nvar emojies_defs      = require('./lib/data/full.json');\nvar emojies_shortcuts = require('./lib/data/shortcuts');\nvar bare_emoji_plugin = require('./bare');\n\n\nmodule.exports = function emoji_plugin(md, options) {\n  var defaults = {\n    defs: emojies_defs,\n    shortcuts: emojies_shortcuts,\n    enabled: []\n  };\n\n  var opts = md.utils.assign({}, defaults, options || {});\n\n  bare_emoji_plugin(md, opts);\n};\n","// Process block-level custom containers\n//\n'use strict';\n\n\nmodule.exports = function container_plugin(md, name, options) {\n\n  // Second param may be useful if you decide\n  // to increase minimal allowed marker length\n  function validateDefault(params/*, markup*/) {\n    return params.trim().split(' ', 2)[0] === name;\n  }\n\n  function renderDefault(tokens, idx, _options, env, slf) {\n\n    // add a class to the opening tag\n    if (tokens[idx].nesting === 1) {\n      tokens[idx].attrJoin('class', name);\n    }\n\n    return slf.renderToken(tokens, idx, _options, env, slf);\n  }\n\n  options = options || {};\n\n  var min_markers = 3,\n      marker_str  = options.marker || ':',\n      marker_char = marker_str.charCodeAt(0),\n      marker_len  = marker_str.length,\n      validate    = options.validate || validateDefault,\n      render      = options.render || renderDefault;\n\n  function container(state, startLine, endLine, silent) {\n    var pos, nextLine, marker_count, markup, params, token,\n        old_parent, old_line_max,\n        auto_closed = false,\n        start = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    // Check out the first character quickly,\n    // this should filter out most of non-containers\n    //\n    if (marker_char !== state.src.charCodeAt(start)) { return false; }\n\n    // Check out the rest of the marker string\n    //\n    for (pos = start + 1; pos <= max; pos++) {\n      if (marker_str[(pos - start) % marker_len] !== state.src[pos]) {\n        break;\n      }\n    }\n\n    marker_count = Math.floor((pos - start) / marker_len);\n    if (marker_count < min_markers) { return false; }\n    pos -= (pos - start) % marker_len;\n\n    markup = state.src.slice(start, pos);\n    params = state.src.slice(pos, max);\n    if (!validate(params, markup)) { return false; }\n\n    // Since start is found, we can report success here in validation mode\n    //\n    if (silent) { return true; }\n\n    // Search for the end of the block\n    //\n    nextLine = startLine;\n\n    for (;;) {\n      nextLine++;\n      if (nextLine >= endLine) {\n        // unclosed block should be autoclosed by end of document.\n        // also block seems to be autoclosed by end of parent\n        break;\n      }\n\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (start < max && state.sCount[nextLine] < state.blkIndent) {\n        // non-empty line with negative indent should stop the list:\n        // - ```\n        //  test\n        break;\n      }\n\n      if (marker_char !== state.src.charCodeAt(start)) { continue; }\n\n      if (state.sCount[nextLine] - state.blkIndent >= 4) {\n        // closing fence should be indented less than 4 spaces\n        continue;\n      }\n\n      for (pos = start + 1; pos <= max; pos++) {\n        if (marker_str[(pos - start) % marker_len] !== state.src[pos]) {\n          break;\n        }\n      }\n\n      // closing code fence must be at least as long as the opening one\n      if (Math.floor((pos - start) / marker_len) < marker_count) { continue; }\n\n      // make sure tail has spaces only\n      pos -= (pos - start) % marker_len;\n      pos = state.skipSpaces(pos);\n\n      if (pos < max) { continue; }\n\n      // found!\n      auto_closed = true;\n      break;\n    }\n\n    old_parent = state.parentType;\n    old_line_max = state.lineMax;\n    state.parentType = 'container';\n\n    // this will prevent lazy continuations from ever going past our end marker\n    state.lineMax = nextLine;\n\n    token        = state.push('container_' + name + '_open', 'div', 1);\n    token.markup = markup;\n    token.block  = true;\n    token.info   = params;\n    token.map    = [ startLine, nextLine ];\n\n    state.md.block.tokenize(state, startLine + 1, nextLine);\n\n    token        = state.push('container_' + name + '_close', 'div', -1);\n    token.markup = state.src.slice(start, pos);\n    token.block  = true;\n\n    state.parentType = old_parent;\n    state.lineMax = old_line_max;\n    state.line = nextLine + (auto_closed ? 1 : 0);\n\n    return true;\n  }\n\n  md.block.ruler.before('fence', 'container_' + name, container, {\n    alt: [ 'paragraph', 'reference', 'blockquote', 'list' ]\n  });\n  md.renderer.rules['container_' + name + '_open'] = render;\n  md.renderer.rules['container_' + name + '_close'] = render;\n};\n","'use strict';\n\n\nmodule.exports = function ins_plugin(md) {\n  // Insert each marker as a separate text token, and add it to delimiter list\n  //\n  function tokenize(state, silent) {\n    var i, scanned, token, len, ch,\n        start = state.pos,\n        marker = state.src.charCodeAt(start);\n\n    if (silent) { return false; }\n\n    if (marker !== 0x2B/* + */) { return false; }\n\n    scanned = state.scanDelims(state.pos, true);\n    len = scanned.length;\n    ch = String.fromCharCode(marker);\n\n    if (len < 2) { return false; }\n\n    if (len % 2) {\n      token         = state.push('text', '', 0);\n      token.content = ch;\n      len--;\n    }\n\n    for (i = 0; i < len; i += 2) {\n      token         = state.push('text', '', 0);\n      token.content = ch + ch;\n\n      if (!scanned.can_open && !scanned.can_close) { continue; }\n\n      state.delimiters.push({\n        marker: marker,\n        length: 0, // disable \"rule of 3\" length checks meant for emphasis\n        jump:   i,\n        token:  state.tokens.length - 1,\n        end:    -1,\n        open:   scanned.can_open,\n        close:  scanned.can_close\n      });\n    }\n\n    state.pos += scanned.length;\n\n    return true;\n  }\n\n\n  // Walk through delimiter list and replace text tokens with tags\n  //\n  function postProcess(state, delimiters) {\n    var i, j,\n        startDelim,\n        endDelim,\n        token,\n        loneMarkers = [],\n        max = delimiters.length;\n\n    for (i = 0; i < max; i++) {\n      startDelim = delimiters[i];\n\n      if (startDelim.marker !== 0x2B/* + */) {\n        continue;\n      }\n\n      if (startDelim.end === -1) {\n        continue;\n      }\n\n      endDelim = delimiters[startDelim.end];\n\n      token         = state.tokens[startDelim.token];\n      token.type    = 'ins_open';\n      token.tag     = 'ins';\n      token.nesting = 1;\n      token.markup  = '++';\n      token.content = '';\n\n      token         = state.tokens[endDelim.token];\n      token.type    = 'ins_close';\n      token.tag     = 'ins';\n      token.nesting = -1;\n      token.markup  = '++';\n      token.content = '';\n\n      if (state.tokens[endDelim.token - 1].type === 'text' &&\n          state.tokens[endDelim.token - 1].content === '+') {\n\n        loneMarkers.push(endDelim.token - 1);\n      }\n    }\n\n    // If a marker sequence has an odd number of characters, it's splitted\n    // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n    // start of the sequence.\n    //\n    // So, we have to move all those markers after subsequent s_close tags.\n    //\n    while (loneMarkers.length) {\n      i = loneMarkers.pop();\n      j = i + 1;\n\n      while (j < state.tokens.length && state.tokens[j].type === 'ins_close') {\n        j++;\n      }\n\n      j--;\n\n      if (i !== j) {\n        token = state.tokens[j];\n        state.tokens[j] = state.tokens[i];\n        state.tokens[i] = token;\n      }\n    }\n  }\n\n  md.inline.ruler.before('emphasis', 'ins', tokenize);\n  md.inline.ruler2.before('emphasis', 'ins', function (state) {\n    var curr,\n        tokens_meta = state.tokens_meta,\n        max = (state.tokens_meta || []).length;\n\n    postProcess(state, state.delimiters);\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n        postProcess(state, tokens_meta[curr].delimiters);\n      }\n    }\n  });\n};\n","'use strict';\n\n\nmodule.exports = function ins_plugin(md) {\n  // Insert each marker as a separate text token, and add it to delimiter list\n  //\n  function tokenize(state, silent) {\n    var i, scanned, token, len, ch,\n        start = state.pos,\n        marker = state.src.charCodeAt(start);\n\n    if (silent) { return false; }\n\n    if (marker !== 0x3D/* = */) { return false; }\n\n    scanned = state.scanDelims(state.pos, true);\n    len = scanned.length;\n    ch = String.fromCharCode(marker);\n\n    if (len < 2) { return false; }\n\n    if (len % 2) {\n      token         = state.push('text', '', 0);\n      token.content = ch;\n      len--;\n    }\n\n    for (i = 0; i < len; i += 2) {\n      token         = state.push('text', '', 0);\n      token.content = ch + ch;\n\n      if (!scanned.can_open && !scanned.can_close) { continue; }\n\n      state.delimiters.push({\n        marker: marker,\n        length: 0, // disable \"rule of 3\" length checks meant for emphasis\n        jump:   i,\n        token:  state.tokens.length - 1,\n        end:    -1,\n        open:   scanned.can_open,\n        close:  scanned.can_close\n      });\n    }\n\n    state.pos += scanned.length;\n\n    return true;\n  }\n\n\n  // Walk through delimiter list and replace text tokens with tags\n  //\n  function postProcess(state, delimiters) {\n    var i, j,\n        startDelim,\n        endDelim,\n        token,\n        loneMarkers = [],\n        max = delimiters.length;\n\n    for (i = 0; i < max; i++) {\n      startDelim = delimiters[i];\n\n      if (startDelim.marker !== 0x3D/* = */) {\n        continue;\n      }\n\n      if (startDelim.end === -1) {\n        continue;\n      }\n\n      endDelim = delimiters[startDelim.end];\n\n      token         = state.tokens[startDelim.token];\n      token.type    = 'mark_open';\n      token.tag     = 'mark';\n      token.nesting = 1;\n      token.markup  = '==';\n      token.content = '';\n\n      token         = state.tokens[endDelim.token];\n      token.type    = 'mark_close';\n      token.tag     = 'mark';\n      token.nesting = -1;\n      token.markup  = '==';\n      token.content = '';\n\n      if (state.tokens[endDelim.token - 1].type === 'text' &&\n          state.tokens[endDelim.token - 1].content === '=') {\n\n        loneMarkers.push(endDelim.token - 1);\n      }\n    }\n\n    // If a marker sequence has an odd number of characters, it's splitted\n    // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n    // start of the sequence.\n    //\n    // So, we have to move all those markers after subsequent s_close tags.\n    //\n    while (loneMarkers.length) {\n      i = loneMarkers.pop();\n      j = i + 1;\n\n      while (j < state.tokens.length && state.tokens[j].type === 'mark_close') {\n        j++;\n      }\n\n      j--;\n\n      if (i !== j) {\n        token = state.tokens[j];\n        state.tokens[j] = state.tokens[i];\n        state.tokens[i] = token;\n      }\n    }\n  }\n\n  md.inline.ruler.before('emphasis', 'mark', tokenize);\n  md.inline.ruler2.before('emphasis', 'mark', function (state) {\n    var curr,\n        tokens_meta = state.tokens_meta,\n        max = (state.tokens_meta || []).length;\n\n    postProcess(state, state.delimiters);\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n        postProcess(state, tokens_meta[curr].delimiters);\n      }\n    }\n  });\n};\n","/*\r\n * MIT License\r\n * Copyright (c) 2020 Excellens\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n\r\nimport Elementary from '@excellens/elementary';\r\nimport MarkdownIt from 'markdown-it'\r\nimport MarkdownItSub from 'markdown-it-sub'\r\nimport MarkdownItSup from 'markdown-it-sup'\r\nimport MarkdownItFootnote from 'markdown-it-footnote'\r\nimport MarkdownItDeflist from 'markdown-it-deflist'\r\nimport MarkdownItAbbr from 'markdown-it-abbr'\r\nimport MarkdownItEmoji from 'markdown-it-emoji'\r\nimport MarkdownItContainer from 'markdown-it-container'\r\nimport MarkdownItIns from 'markdown-it-ins'\r\nimport MarkdownItMark from 'markdown-it-mark'\r\n\r\nexport function Instance() {\r\n    const self = (function () {\r\n        const instance = MarkdownIt();\r\n        instance.use(MarkdownItSub);\r\n        instance.use(MarkdownItSup);\r\n        instance.use(MarkdownItFootnote);\r\n        instance.use(MarkdownItDeflist);\r\n        instance.use(MarkdownItAbbr);\r\n        instance.use(MarkdownItEmoji);\r\n        instance.use(MarkdownItContainer);\r\n        instance.use(MarkdownItIns);\r\n        instance.use(MarkdownItMark);\r\n        return instance;\r\n    }());\r\n\r\n    return Elementary.Base.Merge(this, self);\r\n}\r\n\r\nimport {version} from '../package.json'\r\n\r\nexport const metadata = {\r\n    version: version,\r\n};\r\n"],"names":["require$$0","encodeCache","getEncodeCache","exclude","i","ch","cache","String","fromCharCode","test","push","toString","toUpperCase","slice","length","charCodeAt","encode","string","keepEscaped","l","code","nextCode","result","defaultChars","encodeURIComponent","componentChars","decodeCache","getDecodeCache","decode","replace","seq","b1","b2","b3","b4","chr","parseInt","format","url","protocol","slashes","auth","hostname","indexOf","port","pathname","search","hash","Url","this","protocolPattern","portPattern","simplePathPattern","delims","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","hostlessProtocol","javascript","javascript:","slashedProtocol","http","https","ftp","gopher","file","http:","https:","ftp:","gopher:","file:","urlParse","slashesDenoteHost","u","parse","prototype","lowerProto","hec","rest","trim","split","simplePath","exec","proto","toLowerCase","substr","match","hostEnd","atSign","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","j","k","validParts","notHost","bit","unshift","join","qm","require$$1","require$$2","require$$3","require$$4","_class","obj","Object","call","isString","_hasOwnProperty","hasOwnProperty","has","object","key","assign","sources","Array","arguments","forEach","source","TypeError","keys","arrayReplaceAt","src","pos","newElements","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","UNESCAPE_MD_RE","ENTITY_RE","UNESCAPE_ALL_RE","RegExp","DIGITAL_ENTITY_TEST_RE","replaceEntityPattern","name","entities","unescapeMd","str","unescapeAll","escaped","entity","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","&","<",">","\"","replaceUnsafeChar","escapeHtml","REGEXP_ESCAPE_RE","escapeRE","isSpace","isWhiteSpace","isPunctChar","UNICODE_PUNCT_RE","isMdAsciiPunct","normalizeReference","exports","lib","mdurl","ucmicro","parseLinkLabel","state","start","disableNested","level","found","marker","prevPos","labelEnd","max","posMax","oldPos","md","inline","skipToken","parseLinkDestination","lines","ok","parseLinkTitle","default_rules","code_inline","tokens","idx","options","env","slf","token","renderAttrs","content","code_block","fence","info","langName","langAttrs","highlighted","arr","tmpAttrs","tmpToken","highlight","attrIndex","attrs","langPrefix","image","renderInlineAsText","children","renderToken","hardbreak","xhtmlOut","softbreak","breaks","text","html_block","html_inline","Renderer","rules","nextToken","needLf","hidden","block","nesting","tag","type","renderInline","len","render","Ruler","__rules__","__cache__","__find__","__compile__","self","chains","rule","enabled","alt","altName","chain","fn","at","index","opt","Error","before","beforeName","ruleName","splice","after","afterName","enable","list","ignoreInvalid","isArray","enableOnly","disable","getRules","chainName","NEWLINES_RE","NULL_RE","normalize","inlineMode","Token","map","tok","isLinkOpen","isLinkClose","linkify","currentToken","nodes","ln","lastPos","htmlLinkLevel","fullUrl","urlText","blockTokens","links","pretest","normalizeLink","validateLink","schema","normalizeLinkText","markup","lastIndex","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","p","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","typographer","QUOTE_TEST_RE","QUOTE_RE","APOSTROPHE","replaceAt","process_inlines","t","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","single","quotes","smartquotes","meta","attrPush","attrData","attrSet","value","attrGet","attrJoin","StateCore","_rules","require$$5","Core","ruler","process","State","require$$6","getLine","line","bMarks","tShift","eMarks","escapedSplit","isEscaped","current","substring","table","startLine","endLine","silent","lineText","nextLine","columns","columnCount","aligns","tableLines","tbodyLines","oldParentType","terminate","terminatorRules","sCount","blkIndent","shift","pop","parentType","last","isEmpty","getLines","params","mem","haveEndMarker","skipChars","skipSpaces","blockquote","adjustTab","initial","lastLineEmpty","offset","oldBMarks","oldBSCount","oldIndent","oldSCount","oldTShift","spaceAfterMarker","isOutdented","oldLineMax","lineMax","bsCount","tokenize","hr","cnt","skipBulletListMarker","skipOrderedListMarker","markTightParagraphs","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","tight","listIndent","Number","Math","min","reference","_endLine","destEndPos","destEndLineNo","href","label","res","title","helpers","references","heading","tmp","skipSpacesBack","skipCharsBack","lheading","attr_name","unquoted","single_quoted","double_quoted","attr_value","attribute","open_tag","close_tag","comment","processing","declaration","cdata","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","HTML_SEQUENCES","block_names","html","paragraph","StateBlock","s","indent_found","ddIndent","skipEmptyLines","from","begin","end","keepLastLF","lineIndent","first","queue","lineStart","require$$7","require$$8","require$$9","require$$10","ParserBlock","hasEmptyLines","maxNesting","outTokens","require$$11","isTerminatorChar","pending","newline","pmax","ESCAPED","escape","backtick","matchStart","matchEnd","strikethrough","scanned","scanDelims","delimiters","jump","open","can_open","close","can_close","postProcess","startDelim","endDelim","loneMarkers","curr","tokens_meta","emphasis","isStrong","link","labelStart","ref","parseReference","EMAIL_RE","AUTOLINK_RE","autolink","tail","linkMatch","emailMatch","isLetter","lc","DIGITAL_RE","NAMED_RE","processDelimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","link_pairs","text_collapse","StateInline","pendingLevel","_prev_delimiters","pushPending","token_meta","canSplitWord","count","left_flanking","right_flanking","_rules2","require$$12","ParserInline","ruler2","require$$13","opts","re","src_Any","src_Cc","src_Z","src_P","src_ZPCc","src_ZCc","text_separators","src_pseudo_letter","src_ip4","src_auth","src_port","src_host_terminator","src_path","src_email_name","src_xn","src_domain_root","src_domain","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","src_host_strict","tpl_host_fuzzy_strict","src_host_port_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","tpl_host_fuzzy_test","tpl_email_fuzzy","tpl_link_fuzzy","tpl_link_no_ip_fuzzy","isObject","isRegExp","isFunction","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","isOptionsObj","reduce","acc","defaultSchemas","validate","//","no_http","mailto:","mailto","tlds_2ch_src_re","tlds_default","resetScanCache","__index__","__text_cache__","createValidator","createNormalizer","compile","__opts__","tlds","__tlds__","onCompile","__tlds_replaced__","src_tlds","untpl","tpl","email_fuzzy","link_fuzzy","link_no_ip_fuzzy","host_fuzzy_test","aliases","__compiled__","schemaError","val","__schemas__","compiled","alias","slist","filter","schema_test","schema_search","Match","__last_index__","__schema__","raw","createMatch","LinkifyIt","schemas","add","definition","set","m","ml","me","next","tld_pos","at_pos","testSchemaAt","keepOld","sort","el","reverse","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","overflow","not-basic","invalid-input","baseMinusTMin","floor","stringFromCharCode","error","RangeError","array","mapDomain","parts","labels","encoded","ucs2decode","output","counter","extra","ucs2encode","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","input","inputLength","out","n","bias","basic","oldi","w","baseMinusT","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","toUnicode","toASCII","version","ucs2","components","core","rules2","config","default","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","RECODE_HOSTNAME_FOR","parsed","punycode","er","MarkdownIt","presetName","utils","ParserCore","renderer","configure","presets","missed","use","plugin","args","apply","parseInline","UNESCAPE_RE","subscript","sub_plugin","superscript","sup_plugin","render_footnote_anchor_name","id","prefix","docId","render_footnote_caption","subId","render_footnote_ref","footnote_anchor_name","caption","footnote_caption","refid","render_footnote_block_open","render_footnote_block_close","render_footnote_open","render_footnote_close","render_footnote_anchor","footnote_plugin","footnote_ref","footnote_block_open","footnote_block_close","footnote_open","footnote_close","footnote_anchor","footnote_def","oldBMark","posAfterColon","footnotes","refs","footnote_inline","footnoteId","footnoteSubId","footnote_tail","lastParagraph","currentLabel","insideRef","refTokens","deflist_plugin","skipMarker","deflist","ddLine","dtLine","oldDDIndent","OTHER_CHARS","P","UNICODE_SPACE_RE","Z","abbr_def","abbreviations","abbr_replace","reg","regText","regSimple","x","a","b","angry","blush","broken_heart","confused","cry","frowning","heart","imp","innocent","joy","kissing","laughing","neutral_face","open_mouth","rage","smile","smiley","smiling_imp","sob","stuck_out_tongue","sunglasses","sweat","sweat_smile","unamused","wink","emoji_html","create_rule","emojies","shortcuts","scanRE","replaceRE","ucm","ZPCc","Cc","splitTextToken","last_pos","emoji_name","emoji_replace","autolinkLevel","quoteRE","normalize_opts","defs","names","emoji_plugin","defaults","emoji","emojies_defs","emojies_shortcuts","bare_emoji_plugin","container_plugin","validateDefault","renderDefault","_options","min_markers","marker_str","marker_char","marker_len","container","marker_count","old_parent","old_line_max","auto_closed","ins_plugin","Instance","instance","MarkdownItSub","MarkdownItSup","MarkdownItFootnote","MarkdownItDeflist","MarkdownItAbbr","MarkdownItEmoji","MarkdownItContainer","MarkdownItIns","MarkdownItMark","Elementary","Base","Merge","metadata"],"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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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"}