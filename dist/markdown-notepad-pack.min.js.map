{"version":3,"file":"markdown-notepad-pack.min.js","sources":["../node_modules/uc.micro/categories/P/regex.js","../node_modules/mdurl/encode.js","../node_modules/mdurl/decode.js","../node_modules/mdurl/parse.js","../node_modules/mdurl/index.js","../node_modules/mdurl/format.js","../node_modules/uc.micro/properties/Any/regex.js","../node_modules/uc.micro/categories/Cc/regex.js","../node_modules/uc.micro/categories/Z/regex.js","../node_modules/uc.micro/index.js","../node_modules/uc.micro/categories/Cf/regex.js","../node_modules/markdown-it/lib/common/utils.js","../node_modules/markdown-it/lib/helpers/parse_link_destination.js","../node_modules/markdown-it/lib/helpers/parse_link_title.js","../node_modules/markdown-it/lib/helpers/parse_link_label.js","../node_modules/markdown-it/lib/renderer.js","../node_modules/markdown-it/lib/ruler.js","../node_modules/markdown-it/lib/rules_core/normalize.js","../node_modules/markdown-it/lib/rules_core/linkify.js","../node_modules/markdown-it/lib/rules_core/replacements.js","../node_modules/markdown-it/lib/rules_core/smartquotes.js","../node_modules/markdown-it/lib/token.js","../node_modules/markdown-it/lib/rules_core/state_core.js","../node_modules/markdown-it/lib/parser_core.js","../node_modules/markdown-it/lib/rules_core/block.js","../node_modules/markdown-it/lib/rules_core/inline.js","../node_modules/markdown-it/lib/rules_block/table.js","../node_modules/markdown-it/lib/rules_block/blockquote.js","../node_modules/markdown-it/lib/rules_block/hr.js","../node_modules/markdown-it/lib/rules_block/list.js","../node_modules/markdown-it/lib/rules_block/reference.js","../node_modules/markdown-it/lib/rules_block/heading.js","../node_modules/markdown-it/lib/common/html_re.js","../node_modules/markdown-it/lib/rules_block/html_block.js","../node_modules/markdown-it/lib/common/html_blocks.js","../node_modules/markdown-it/lib/rules_block/state_block.js","../node_modules/markdown-it/lib/parser_block.js","../node_modules/markdown-it/lib/rules_block/code.js","../node_modules/markdown-it/lib/rules_block/fence.js","../node_modules/markdown-it/lib/rules_block/lheading.js","../node_modules/markdown-it/lib/rules_block/paragraph.js","../node_modules/markdown-it/lib/rules_inline/text.js","../node_modules/markdown-it/lib/rules_inline/escape.js","../node_modules/markdown-it/lib/rules_inline/newline.js","../node_modules/markdown-it/lib/rules_inline/strikethrough.js","../node_modules/markdown-it/lib/rules_inline/emphasis.js","../node_modules/markdown-it/lib/rules_inline/link.js","../node_modules/markdown-it/lib/rules_inline/image.js","../node_modules/markdown-it/lib/rules_inline/autolink.js","../node_modules/markdown-it/lib/rules_inline/html_inline.js","../node_modules/markdown-it/lib/rules_inline/entity.js","../node_modules/markdown-it/lib/rules_inline/balance_pairs.js","../node_modules/markdown-it/lib/rules_inline/state_inline.js","../node_modules/markdown-it/lib/parser_inline.js","../node_modules/markdown-it/lib/rules_inline/backticks.js","../node_modules/markdown-it/lib/rules_inline/text_collapse.js","../node_modules/linkify-it/index.js","../node_modules/linkify-it/lib/re.js","../node_modules/rollup-plugin-node-polyfills/polyfills/punycode.js","../node_modules/markdown-it/lib/index.js","../node_modules/markdown-it/lib/presets/default.js","../node_modules/markdown-it/lib/presets/zero.js","../node_modules/markdown-it/lib/presets/commonmark.js","../node_modules/markdown-it-sub/index.js","../node_modules/markdown-it-sup/index.js","../node_modules/markdown-it-footnote/index.js","../node_modules/markdown-it-deflist/index.js","../node_modules/markdown-it-abbr/index.js","../node_modules/markdown-it-emoji/lib/data/shortcuts.js","../node_modules/markdown-it-emoji/lib/render.js","../node_modules/markdown-it-emoji/lib/normalize_opts.js","../node_modules/markdown-it-emoji/bare.js","../node_modules/markdown-it-emoji/lib/replace.js","../node_modules/markdown-it-emoji/index.js","../node_modules/markdown-it-container/index.js","../node_modules/markdown-it-ins/index.js","../node_modules/markdown-it-mark/index.js","../src/Main.js"],"sourcesContent":["module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .clone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * fence infostring\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  ch = state.src.charCodeAt(pos++);\n  if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.tShift[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?].*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style)(?=(\\s|>|$))/i, /<\\/(script|pre|style)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'meta',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, true);\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        state.pending = state.pending.replace(/ +$/, '');\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0, // disable \"rule of 3\" length checks meant for emphasis\n      jump:   i,\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // An amount of characters before this one that's equivalent to\n      // current one. In plain English: if this delimiter does not open\n      // an emphasis, neither do previous `jump` characters.\n      //\n      // Used to skip sequences like \"*****\" in one step, for 1st asterisk\n      // value will be 0, for 2nd it's 1 and so on.\n      //\n      jump:   i,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               delimiters[startDelim.end + 1].token === endDelim.token + 1 &&\n               delimiters[i - 1].marker === startDelim.marker;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      title,\n      token,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\nvar AUTOLINK_RE = /^<([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)>/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var tail, linkMatch, emailMatch, url, fullUrl, token,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  tail = state.src.slice(pos);\n\n  if (tail.indexOf('>') < 0) { return false; }\n\n  if (AUTOLINK_RE.test(tail)) {\n    linkMatch = tail.match(AUTOLINK_RE);\n\n    url = linkMatch[0].slice(1, -1);\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += linkMatch[0].length;\n    return true;\n  }\n\n  if (EMAIL_RE.test(tail)) {\n    emailMatch = tail.match(EMAIL_RE);\n\n    url = emailMatch[0].slice(1, -1);\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += emailMatch[0].length;\n    return true;\n  }\n\n  return false;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker and each delimiter length modulo 3.\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][closer.length % 3];\n    newMinOpenerIdx = -1;\n\n    openerIdx = closerIdx - closer.jump - 1;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= opener.jump + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (newMinOpenerIdx === -1) newMinOpenerIdx = openerIdx;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            delimiters[openerIdx - 1].jump + 1 :\n            0;\n\n          closer.jump  = closerIdx - openerIdx + lastJump;\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.jump  = lastJump;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.length || 0) % 3] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Parse backticks\n\n'use strict';\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, matchStart, matchEnd, token,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n\n  matchStart = matchEnd = pos;\n\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    if (matchEnd - matchStart === marker.length) {\n      if (!silent) {\n        token         = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += marker; }\n  state.pos += marker.length;\n  return true;\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          '\\\\,(?!' + re.src_ZCc + ').|' +       // allow `,,,` in paths\n          '\\\\!+(?!' + re.src_ZCc + '|[!]).|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n\n\n/** Highest positive signed 32-bit float value */\nvar maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nvar base = 36;\nvar tMin = 1;\nvar tMax = 26;\nvar skew = 38;\nvar damp = 700;\nvar initialBias = 72;\nvar initialN = 128; // 0x80\nvar delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nvar regexPunycode = /^xn--/;\nvar regexNonASCII = /[^\\x20-\\x7E]/; // unprintable ASCII chars + non-ASCII chars\nvar regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nvar errors = {\n  'overflow': 'Overflow: input needs wider integers to process',\n  'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n  'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nvar baseMinusTMin = base - tMin;\nvar floor = Math.floor;\nvar stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n  throw new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n  var length = array.length;\n  var result = [];\n  while (length--) {\n    result[length] = fn(array[length]);\n  }\n  return result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n  var parts = string.split('@');\n  var result = '';\n  if (parts.length > 1) {\n    // In email addresses, only the domain name should be punycoded. Leave\n    // the local part (i.e. everything up to `@`) intact.\n    result = parts[0] + '@';\n    string = parts[1];\n  }\n  // Avoid `split(regex)` for IE8 compatibility. See #17.\n  string = string.replace(regexSeparators, '\\x2E');\n  var labels = string.split('.');\n  var encoded = map(labels, fn).join('.');\n  return result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n  var output = [],\n    counter = 0,\n    length = string.length,\n    value,\n    extra;\n  while (counter < length) {\n    value = string.charCodeAt(counter++);\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      // high surrogate, and there is a next character\n      extra = string.charCodeAt(counter++);\n      if ((extra & 0xFC00) == 0xDC00) { // low surrogate\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        // unmatched surrogate; only append this code unit, in case the next\n        // code unit is the high surrogate of a surrogate pair\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n  return output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nfunction ucs2encode(array) {\n  return map(array, function(value) {\n    var output = '';\n    if (value > 0xFFFF) {\n      value -= 0x10000;\n      output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n      value = 0xDC00 | value & 0x3FF;\n    }\n    output += stringFromCharCode(value);\n    return output;\n  }).join('');\n}\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nfunction basicToDigit(codePoint) {\n  if (codePoint - 48 < 10) {\n    return codePoint - 22;\n  }\n  if (codePoint - 65 < 26) {\n    return codePoint - 65;\n  }\n  if (codePoint - 97 < 26) {\n    return codePoint - 97;\n  }\n  return base;\n}\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nfunction digitToBasic(digit, flag) {\n  //  0..25 map to ASCII a..z or A..Z\n  // 26..35 map to ASCII 0..9\n  return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n}\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nfunction adapt(delta, numPoints, firstTime) {\n  var k = 0;\n  delta = firstTime ? floor(delta / damp) : delta >> 1;\n  delta += floor(delta / numPoints);\n  for ( /* no initialization */ ; delta > baseMinusTMin * tMax >> 1; k += base) {\n    delta = floor(delta / baseMinusTMin);\n  }\n  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n}\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nexport function decode(input) {\n  // Don't use UCS-2\n  var output = [],\n    inputLength = input.length,\n    out,\n    i = 0,\n    n = initialN,\n    bias = initialBias,\n    basic,\n    j,\n    index,\n    oldi,\n    w,\n    k,\n    digit,\n    t,\n    /** Cached calculation results */\n    baseMinusT;\n\n  // Handle the basic code points: let `basic` be the number of input code\n  // points before the last delimiter, or `0` if there is none, then copy\n  // the first basic code points to the output.\n\n  basic = input.lastIndexOf(delimiter);\n  if (basic < 0) {\n    basic = 0;\n  }\n\n  for (j = 0; j < basic; ++j) {\n    // if it's not a basic code point\n    if (input.charCodeAt(j) >= 0x80) {\n      error('not-basic');\n    }\n    output.push(input.charCodeAt(j));\n  }\n\n  // Main decoding loop: start just after the last delimiter if any basic code\n  // points were copied; start at the beginning otherwise.\n\n  for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */ ) {\n\n    // `index` is the index of the next character to be consumed.\n    // Decode a generalized variable-length integer into `delta`,\n    // which gets added to `i`. The overflow checking is easier\n    // if we increase `i` as we go, then subtract off its starting\n    // value at the end to obtain `delta`.\n    for (oldi = i, w = 1, k = base; /* no condition */ ; k += base) {\n\n      if (index >= inputLength) {\n        error('invalid-input');\n      }\n\n      digit = basicToDigit(input.charCodeAt(index++));\n\n      if (digit >= base || digit > floor((maxInt - i) / w)) {\n        error('overflow');\n      }\n\n      i += digit * w;\n      t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n      if (digit < t) {\n        break;\n      }\n\n      baseMinusT = base - t;\n      if (w > floor(maxInt / baseMinusT)) {\n        error('overflow');\n      }\n\n      w *= baseMinusT;\n\n    }\n\n    out = output.length + 1;\n    bias = adapt(i - oldi, out, oldi == 0);\n\n    // `i` was supposed to wrap around from `out` to `0`,\n    // incrementing `n` each time, so we'll fix that now:\n    if (floor(i / out) > maxInt - n) {\n      error('overflow');\n    }\n\n    n += floor(i / out);\n    i %= out;\n\n    // Insert `n` at position `i` of the output\n    output.splice(i++, 0, n);\n\n  }\n\n  return ucs2encode(output);\n}\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nexport function encode(input) {\n  var n,\n    delta,\n    handledCPCount,\n    basicLength,\n    bias,\n    j,\n    m,\n    q,\n    k,\n    t,\n    currentValue,\n    output = [],\n    /** `inputLength` will hold the number of code points in `input`. */\n    inputLength,\n    /** Cached calculation results */\n    handledCPCountPlusOne,\n    baseMinusT,\n    qMinusT;\n\n  // Convert the input in UCS-2 to Unicode\n  input = ucs2decode(input);\n\n  // Cache the length\n  inputLength = input.length;\n\n  // Initialize the state\n  n = initialN;\n  delta = 0;\n  bias = initialBias;\n\n  // Handle the basic code points\n  for (j = 0; j < inputLength; ++j) {\n    currentValue = input[j];\n    if (currentValue < 0x80) {\n      output.push(stringFromCharCode(currentValue));\n    }\n  }\n\n  handledCPCount = basicLength = output.length;\n\n  // `handledCPCount` is the number of code points that have been handled;\n  // `basicLength` is the number of basic code points.\n\n  // Finish the basic string - if it is not empty - with a delimiter\n  if (basicLength) {\n    output.push(delimiter);\n  }\n\n  // Main encoding loop:\n  while (handledCPCount < inputLength) {\n\n    // All non-basic code points < n have been handled already. Find the next\n    // larger one:\n    for (m = maxInt, j = 0; j < inputLength; ++j) {\n      currentValue = input[j];\n      if (currentValue >= n && currentValue < m) {\n        m = currentValue;\n      }\n    }\n\n    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n    // but guard against overflow\n    handledCPCountPlusOne = handledCPCount + 1;\n    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n      error('overflow');\n    }\n\n    delta += (m - n) * handledCPCountPlusOne;\n    n = m;\n\n    for (j = 0; j < inputLength; ++j) {\n      currentValue = input[j];\n\n      if (currentValue < n && ++delta > maxInt) {\n        error('overflow');\n      }\n\n      if (currentValue == n) {\n        // Represent delta as a generalized variable-length integer\n        for (q = delta, k = base; /* no condition */ ; k += base) {\n          t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n          if (q < t) {\n            break;\n          }\n          qMinusT = q - t;\n          baseMinusT = base - t;\n          output.push(\n            stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n          );\n          q = floor(qMinusT / baseMinusT);\n        }\n\n        output.push(stringFromCharCode(digitToBasic(q, 0)));\n        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n        delta = 0;\n        ++handledCPCount;\n      }\n    }\n\n    ++delta;\n    ++n;\n\n  }\n  return output.join('');\n}\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nexport function toUnicode(input) {\n  return mapDomain(input, function(string) {\n    return regexPunycode.test(string) ?\n      decode(string.slice(4).toLowerCase()) :\n      string;\n  });\n}\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nexport function toASCII(input) {\n  return mapDomain(input, function(string) {\n    return regexNonASCII.test(string) ?\n      'xn--' + encode(string) :\n      string;\n  });\n}\nexport var version = '1.4.1';\n/**\n * An object of methods to convert from JavaScript's internal character\n * representation (UCS-2) to Unicode code points, and back.\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode\n * @type Object\n */\n\nexport var ucs2 = {\n  decode: ucs2decode,\n  encode: ucs2encode\n};\nexport default {\n  version: version,\n  ucs2: ucs2,\n  toASCII: toASCII,\n  toUnicode: toUnicode,\n  encode: encode,\n  decode: decode\n}\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(lang, str, true).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(lang, str, true).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// Process ~subscript~\n\n'use strict';\n\n// same as UNESCAPE_MD_RE plus a space\nvar UNESCAPE_RE = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\n\nfunction subscript(state, silent) {\n  var found,\n      content,\n      token,\n      max = state.posMax,\n      start = state.pos;\n\n  if (state.src.charCodeAt(start) !== 0x7E/* ~ */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 2 >= max) { return false; }\n\n  state.pos = start + 1;\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === 0x7E/* ~ */) {\n      found = true;\n      break;\n    }\n\n    state.md.inline.skipToken(state);\n  }\n\n  if (!found || start + 1 === state.pos) {\n    state.pos = start;\n    return false;\n  }\n\n  content = state.src.slice(start + 1, state.pos);\n\n  // don't allow unescaped spaces/newlines inside\n  if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 1;\n\n  // Earlier we checked !silent, but this implementation does not need it\n  token         = state.push('sub_open', 'sub', 1);\n  token.markup  = '~';\n\n  token         = state.push('text', '', 0);\n  token.content = content.replace(UNESCAPE_RE, '$1');\n\n  token         = state.push('sub_close', 'sub', -1);\n  token.markup  = '~';\n\n  state.pos = state.posMax + 1;\n  state.posMax = max;\n  return true;\n}\n\n\nmodule.exports = function sub_plugin(md) {\n  md.inline.ruler.after('emphasis', 'sub', subscript);\n};\n","// Process ^superscript^\n\n'use strict';\n\n// same as UNESCAPE_MD_RE plus a space\nvar UNESCAPE_RE = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\nfunction superscript(state, silent) {\n  var found,\n      content,\n      token,\n      max = state.posMax,\n      start = state.pos;\n\n  if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 2 >= max) { return false; }\n\n  state.pos = start + 1;\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === 0x5E/* ^ */) {\n      found = true;\n      break;\n    }\n\n    state.md.inline.skipToken(state);\n  }\n\n  if (!found || start + 1 === state.pos) {\n    state.pos = start;\n    return false;\n  }\n\n  content = state.src.slice(start + 1, state.pos);\n\n  // don't allow unescaped spaces/newlines inside\n  if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 1;\n\n  // Earlier we checked !silent, but this implementation does not need it\n  token         = state.push('sup_open', 'sup', 1);\n  token.markup  = '^';\n\n  token         = state.push('text', '', 0);\n  token.content = content.replace(UNESCAPE_RE, '$1');\n\n  token         = state.push('sup_close', 'sup', -1);\n  token.markup  = '^';\n\n  state.pos = state.posMax + 1;\n  state.posMax = max;\n  return true;\n}\n\n\nmodule.exports = function sup_plugin(md) {\n  md.inline.ruler.after('emphasis', 'sup', superscript);\n};\n","// Process footnotes\n//\n'use strict';\n\n////////////////////////////////////////////////////////////////////////////////\n// Renderer partials\n\nfunction render_footnote_anchor_name(tokens, idx, options, env/*, slf*/) {\n  var n = Number(tokens[idx].meta.id + 1).toString();\n  var prefix = '';\n\n  if (typeof env.docId === 'string') {\n    prefix = '-' + env.docId + '-';\n  }\n\n  return prefix + n;\n}\n\nfunction render_footnote_caption(tokens, idx/*, options, env, slf*/) {\n  var n = Number(tokens[idx].meta.id + 1).toString();\n\n  if (tokens[idx].meta.subId > 0) {\n    n += ':' + tokens[idx].meta.subId;\n  }\n\n  return '[' + n + ']';\n}\n\nfunction render_footnote_ref(tokens, idx, options, env, slf) {\n  var id      = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf);\n  var caption = slf.rules.footnote_caption(tokens, idx, options, env, slf);\n  var refid   = id;\n\n  if (tokens[idx].meta.subId > 0) {\n    refid += ':' + tokens[idx].meta.subId;\n  }\n\n  return '<sup class=\"footnote-ref\"><a href=\"#fn' + id + '\" id=\"fnref' + refid + '\">' + caption + '</a></sup>';\n}\n\nfunction render_footnote_block_open(tokens, idx, options) {\n  return (options.xhtmlOut ? '<hr class=\"footnotes-sep\" />\\n' : '<hr class=\"footnotes-sep\">\\n') +\n         '<section class=\"footnotes\">\\n' +\n         '<ol class=\"footnotes-list\">\\n';\n}\n\nfunction render_footnote_block_close() {\n  return '</ol>\\n</section>\\n';\n}\n\nfunction render_footnote_open(tokens, idx, options, env, slf) {\n  var id = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf);\n\n  if (tokens[idx].meta.subId > 0) {\n    id += ':' + tokens[idx].meta.subId;\n  }\n\n  return '<li id=\"fn' + id + '\" class=\"footnote-item\">';\n}\n\nfunction render_footnote_close() {\n  return '</li>\\n';\n}\n\nfunction render_footnote_anchor(tokens, idx, options, env, slf) {\n  var id = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf);\n\n  if (tokens[idx].meta.subId > 0) {\n    id += ':' + tokens[idx].meta.subId;\n  }\n\n  /* ↩ with escape code to prevent display as Apple Emoji on iOS */\n  return ' <a href=\"#fnref' + id + '\" class=\"footnote-backref\">\\u21a9\\uFE0E</a>';\n}\n\n\nmodule.exports = function footnote_plugin(md) {\n  var parseLinkLabel = md.helpers.parseLinkLabel,\n      isSpace = md.utils.isSpace;\n\n  md.renderer.rules.footnote_ref          = render_footnote_ref;\n  md.renderer.rules.footnote_block_open   = render_footnote_block_open;\n  md.renderer.rules.footnote_block_close  = render_footnote_block_close;\n  md.renderer.rules.footnote_open         = render_footnote_open;\n  md.renderer.rules.footnote_close        = render_footnote_close;\n  md.renderer.rules.footnote_anchor       = render_footnote_anchor;\n\n  // helpers (only used in other rules, no tokens are attached to those)\n  md.renderer.rules.footnote_caption      = render_footnote_caption;\n  md.renderer.rules.footnote_anchor_name  = render_footnote_anchor_name;\n\n  // Process footnote block definition\n  function footnote_def(state, startLine, endLine, silent) {\n    var oldBMark, oldTShift, oldSCount, oldParentType, pos, label, token,\n        initial, offset, ch, posAfterColon,\n        start = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    // line should be at least 5 chars - \"[^x]:\"\n    if (start + 4 > max) { return false; }\n\n    if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x20) { return false; }\n      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n        break;\n      }\n    }\n\n    if (pos === start + 2) { return false; } // no empty footnote labels\n    if (pos + 1 >= max || state.src.charCodeAt(++pos) !== 0x3A /* : */) { return false; }\n    if (silent) { return true; }\n    pos++;\n\n    if (!state.env.footnotes) { state.env.footnotes = {}; }\n    if (!state.env.footnotes.refs) { state.env.footnotes.refs = {}; }\n    label = state.src.slice(start + 2, pos - 2);\n    state.env.footnotes.refs[':' + label] = -1;\n\n    token       = new state.Token('footnote_reference_open', '', 1);\n    token.meta  = { label: label };\n    token.level = state.level++;\n    state.tokens.push(token);\n\n    oldBMark = state.bMarks[startLine];\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n    oldParentType = state.parentType;\n\n    posAfterColon = pos;\n    initial = offset = state.sCount[startLine] + pos - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    state.tShift[startLine] = pos - posAfterColon;\n    state.sCount[startLine] = offset - initial;\n\n    state.bMarks[startLine] = posAfterColon;\n    state.blkIndent += 4;\n    state.parentType = 'footnote';\n\n    if (state.sCount[startLine] < state.blkIndent) {\n      state.sCount[startLine] += state.blkIndent;\n    }\n\n    state.md.block.tokenize(state, startLine, endLine, true);\n\n    state.parentType = oldParentType;\n    state.blkIndent -= 4;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.bMarks[startLine] = oldBMark;\n\n    token       = new state.Token('footnote_reference_close', '', -1);\n    token.level = --state.level;\n    state.tokens.push(token);\n\n    return true;\n  }\n\n  // Process inline footnotes (^[...])\n  function footnote_inline(state, silent) {\n    var labelStart,\n        labelEnd,\n        footnoteId,\n        token,\n        tokens,\n        max = state.posMax,\n        start = state.pos;\n\n    if (start + 2 >= max) { return false; }\n    if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5B/* [ */) { return false; }\n\n    labelStart = start + 2;\n    labelEnd = parseLinkLabel(state, start + 1);\n\n    // parser failed to find ']', so it's not a valid note\n    if (labelEnd < 0) { return false; }\n\n    // We found the end of the link, and know for a fact it's a valid link;\n    // so all that's left to do is to call tokenizer.\n    //\n    if (!silent) {\n      if (!state.env.footnotes) { state.env.footnotes = {}; }\n      if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n      footnoteId = state.env.footnotes.list.length;\n\n      state.md.inline.parse(\n        state.src.slice(labelStart, labelEnd),\n        state.md,\n        state.env,\n        tokens = []\n      );\n\n      token      = state.push('footnote_ref', '', 0);\n      token.meta = { id: footnoteId };\n\n      state.env.footnotes.list[footnoteId] = {\n        content: state.src.slice(labelStart, labelEnd),\n        tokens: tokens\n      };\n    }\n\n    state.pos = labelEnd + 1;\n    state.posMax = max;\n    return true;\n  }\n\n  // Process footnote references ([^...])\n  function footnote_ref(state, silent) {\n    var label,\n        pos,\n        footnoteId,\n        footnoteSubId,\n        token,\n        max = state.posMax,\n        start = state.pos;\n\n    // should be at least 4 chars - \"[^x]\"\n    if (start + 3 > max) { return false; }\n\n    if (!state.env.footnotes || !state.env.footnotes.refs) { return false; }\n    if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x20) { return false; }\n      if (state.src.charCodeAt(pos) === 0x0A) { return false; }\n      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n        break;\n      }\n    }\n\n    if (pos === start + 2) { return false; } // no empty footnote labels\n    if (pos >= max) { return false; }\n    pos++;\n\n    label = state.src.slice(start + 2, pos - 1);\n    if (typeof state.env.footnotes.refs[':' + label] === 'undefined') { return false; }\n\n    if (!silent) {\n      if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n\n      if (state.env.footnotes.refs[':' + label] < 0) {\n        footnoteId = state.env.footnotes.list.length;\n        state.env.footnotes.list[footnoteId] = { label: label, count: 0 };\n        state.env.footnotes.refs[':' + label] = footnoteId;\n      } else {\n        footnoteId = state.env.footnotes.refs[':' + label];\n      }\n\n      footnoteSubId = state.env.footnotes.list[footnoteId].count;\n      state.env.footnotes.list[footnoteId].count++;\n\n      token      = state.push('footnote_ref', '', 0);\n      token.meta = { id: footnoteId, subId: footnoteSubId, label: label };\n    }\n\n    state.pos = pos;\n    state.posMax = max;\n    return true;\n  }\n\n  // Glue footnote tokens to end of token stream\n  function footnote_tail(state) {\n    var i, l, j, t, lastParagraph, list, token, tokens, current, currentLabel,\n        insideRef = false,\n        refTokens = {};\n\n    if (!state.env.footnotes) { return; }\n\n    state.tokens = state.tokens.filter(function (tok) {\n      if (tok.type === 'footnote_reference_open') {\n        insideRef = true;\n        current = [];\n        currentLabel = tok.meta.label;\n        return false;\n      }\n      if (tok.type === 'footnote_reference_close') {\n        insideRef = false;\n        // prepend ':' to avoid conflict with Object.prototype members\n        refTokens[':' + currentLabel] = current;\n        return false;\n      }\n      if (insideRef) { current.push(tok); }\n      return !insideRef;\n    });\n\n    if (!state.env.footnotes.list) { return; }\n    list = state.env.footnotes.list;\n\n    token = new state.Token('footnote_block_open', '', 1);\n    state.tokens.push(token);\n\n    for (i = 0, l = list.length; i < l; i++) {\n      token      = new state.Token('footnote_open', '', 1);\n      token.meta = { id: i, label: list[i].label };\n      state.tokens.push(token);\n\n      if (list[i].tokens) {\n        tokens = [];\n\n        token          = new state.Token('paragraph_open', 'p', 1);\n        token.block    = true;\n        tokens.push(token);\n\n        token          = new state.Token('inline', '', 0);\n        token.children = list[i].tokens;\n        token.content  = list[i].content;\n        tokens.push(token);\n\n        token          = new state.Token('paragraph_close', 'p', -1);\n        token.block    = true;\n        tokens.push(token);\n\n      } else if (list[i].label) {\n        tokens = refTokens[':' + list[i].label];\n      }\n\n      state.tokens = state.tokens.concat(tokens);\n      if (state.tokens[state.tokens.length - 1].type === 'paragraph_close') {\n        lastParagraph = state.tokens.pop();\n      } else {\n        lastParagraph = null;\n      }\n\n      t = list[i].count > 0 ? list[i].count : 1;\n      for (j = 0; j < t; j++) {\n        token      = new state.Token('footnote_anchor', '', 0);\n        token.meta = { id: i, subId: j, label: list[i].label };\n        state.tokens.push(token);\n      }\n\n      if (lastParagraph) {\n        state.tokens.push(lastParagraph);\n      }\n\n      token = new state.Token('footnote_close', '', -1);\n      state.tokens.push(token);\n    }\n\n    token = new state.Token('footnote_block_close', '', -1);\n    state.tokens.push(token);\n  }\n\n  md.block.ruler.before('reference', 'footnote_def', footnote_def, { alt: [ 'paragraph', 'reference' ] });\n  md.inline.ruler.after('image', 'footnote_inline', footnote_inline);\n  md.inline.ruler.after('footnote_inline', 'footnote_ref', footnote_ref);\n  md.core.ruler.after('inline', 'footnote_tail', footnote_tail);\n};\n","// Process definition lists\n//\n'use strict';\n\n\nmodule.exports = function deflist_plugin(md) {\n  var isSpace = md.utils.isSpace;\n\n  // Search `[:~][\\n ]`, returns next pos after marker on success\n  // or -1 on fail.\n  function skipMarker(state, line) {\n    var pos, marker,\n        start = state.bMarks[line] + state.tShift[line],\n        max = state.eMarks[line];\n\n    if (start >= max) { return -1; }\n\n    // Check bullet\n    marker = state.src.charCodeAt(start++);\n    if (marker !== 0x7E/* ~ */ && marker !== 0x3A/* : */) { return -1; }\n\n    pos = state.skipSpaces(start);\n\n    // require space after \":\"\n    if (start === pos) { return -1; }\n\n    // no empty definitions, e.g. \"  : \"\n    if (pos >= max) { return -1; }\n\n    return start;\n  }\n\n  function markTightParagraphs(state, idx) {\n    var i, l,\n        level = state.level + 2;\n\n    for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n      if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n        state.tokens[i + 2].hidden = true;\n        state.tokens[i].hidden = true;\n        i += 2;\n      }\n    }\n  }\n\n  function deflist(state, startLine, endLine, silent) {\n    var ch,\n        contentStart,\n        ddLine,\n        dtLine,\n        itemLines,\n        listLines,\n        listTokIdx,\n        max,\n        nextLine,\n        offset,\n        oldDDIndent,\n        oldIndent,\n        oldParentType,\n        oldSCount,\n        oldTShift,\n        oldTight,\n        pos,\n        prevEmptyEnd,\n        tight,\n        token;\n\n    if (silent) {\n      // quirk: validation mode validates a dd block only, not a whole deflist\n      if (state.ddIndent < 0) { return false; }\n      return skipMarker(state, startLine) >= 0;\n    }\n\n    nextLine = startLine + 1;\n    if (nextLine >= endLine) { return false; }\n\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      if (nextLine >= endLine) { return false; }\n    }\n\n    if (state.sCount[nextLine] < state.blkIndent) { return false; }\n    contentStart = skipMarker(state, nextLine);\n    if (contentStart < 0) { return false; }\n\n    // Start list\n    listTokIdx = state.tokens.length;\n    tight = true;\n\n    token     = state.push('dl_open', 'dl', 1);\n    token.map = listLines = [ startLine, 0 ];\n\n    //\n    // Iterate list items\n    //\n\n    dtLine = startLine;\n    ddLine = nextLine;\n\n    // One definition list can contain multiple DTs,\n    // and one DT can be followed by multiple DDs.\n    //\n    // Thus, there is two loops here, and label is\n    // needed to break out of the second one\n    //\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    for (;;) {\n      prevEmptyEnd = false;\n\n      token          = state.push('dt_open', 'dt', 1);\n      token.map      = [ dtLine, dtLine ];\n\n      token          = state.push('inline', '', 0);\n      token.map      = [ dtLine, dtLine ];\n      token.content  = state.getLines(dtLine, dtLine + 1, state.blkIndent, false).trim();\n      token.children = [];\n\n      token          = state.push('dt_close', 'dt', -1);\n\n      for (;;) {\n        token     = state.push('dd_open', 'dd', 1);\n        token.map = itemLines = [ nextLine, 0 ];\n\n        pos = contentStart;\n        max = state.eMarks[ddLine];\n        offset = state.sCount[ddLine] + contentStart - (state.bMarks[ddLine] + state.tShift[ddLine]);\n\n        while (pos < max) {\n          ch = state.src.charCodeAt(pos);\n\n          if (isSpace(ch)) {\n            if (ch === 0x09) {\n              offset += 4 - offset % 4;\n            } else {\n              offset++;\n            }\n          } else {\n            break;\n          }\n\n          pos++;\n        }\n\n        contentStart = pos;\n\n        oldTight = state.tight;\n        oldDDIndent = state.ddIndent;\n        oldIndent = state.blkIndent;\n        oldTShift = state.tShift[ddLine];\n        oldSCount = state.sCount[ddLine];\n        oldParentType = state.parentType;\n        state.blkIndent = state.ddIndent = state.sCount[ddLine] + 2;\n        state.tShift[ddLine] = contentStart - state.bMarks[ddLine];\n        state.sCount[ddLine] = offset;\n        state.tight = true;\n        state.parentType = 'deflist';\n\n        state.md.block.tokenize(state, ddLine, endLine, true);\n\n        // If any of list item is tight, mark list as tight\n        if (!state.tight || prevEmptyEnd) {\n          tight = false;\n        }\n        // Item become loose if finish with empty line,\n        // but we should filter last element, because it means list finish\n        prevEmptyEnd = (state.line - ddLine) > 1 && state.isEmpty(state.line - 1);\n\n        state.tShift[ddLine] = oldTShift;\n        state.sCount[ddLine] = oldSCount;\n        state.tight = oldTight;\n        state.parentType = oldParentType;\n        state.blkIndent = oldIndent;\n        state.ddIndent = oldDDIndent;\n\n        token = state.push('dd_close', 'dd', -1);\n\n        itemLines[1] = nextLine = state.line;\n\n        if (nextLine >= endLine) { break OUTER; }\n\n        if (state.sCount[nextLine] < state.blkIndent) { break OUTER; }\n        contentStart = skipMarker(state, nextLine);\n        if (contentStart < 0) { break; }\n\n        ddLine = nextLine;\n\n        // go to the next loop iteration:\n        // insert DD tag and repeat checking\n      }\n\n      if (nextLine >= endLine) { break; }\n      dtLine = nextLine;\n\n      if (state.isEmpty(dtLine)) { break; }\n      if (state.sCount[dtLine] < state.blkIndent) { break; }\n\n      ddLine = dtLine + 1;\n      if (ddLine >= endLine) { break; }\n      if (state.isEmpty(ddLine)) { ddLine++; }\n      if (ddLine >= endLine) { break; }\n\n      if (state.sCount[ddLine] < state.blkIndent) { break; }\n      contentStart = skipMarker(state, ddLine);\n      if (contentStart < 0) { break; }\n\n      // go to the next loop iteration:\n      // insert DT and DD tags and repeat checking\n    }\n\n    // Finilize list\n    token = state.push('dl_close', 'dl', -1);\n\n    listLines[1] = nextLine;\n\n    state.line = nextLine;\n\n    // mark paragraphs tight if needed\n    if (tight) {\n      markTightParagraphs(state, listTokIdx);\n    }\n\n    return true;\n  }\n\n\n  md.block.ruler.before('paragraph', 'deflist', deflist, { alt: [ 'paragraph', 'reference', 'blockquote' ] });\n};\n","// Enclose abbreviations in <abbr> tags\n//\n'use strict';\n\n\nmodule.exports = function sub_plugin(md) {\n  var escapeRE        = md.utils.escapeRE,\n      arrayReplaceAt  = md.utils.arrayReplaceAt;\n\n  // ASCII characters in Cc, Sc, Sm, Sk categories we should terminate on;\n  // you can check character classes here:\n  // http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\n  var OTHER_CHARS      = ' \\r\\n$+<=>^`|~';\n\n  var UNICODE_PUNCT_RE = md.utils.lib.ucmicro.P.source;\n  var UNICODE_SPACE_RE = md.utils.lib.ucmicro.Z.source;\n\n\n  function abbr_def(state, startLine, endLine, silent) {\n    var label, title, ch, labelStart, labelEnd,\n        pos = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    if (pos + 2 >= max) { return false; }\n\n    if (state.src.charCodeAt(pos++) !== 0x2A/* * */) { return false; }\n    if (state.src.charCodeAt(pos++) !== 0x5B/* [ */) { return false; }\n\n    labelStart = pos;\n\n    for (; pos < max; pos++) {\n      ch = state.src.charCodeAt(pos);\n      if (ch === 0x5B /* [ */) {\n        return false;\n      } else if (ch === 0x5D /* ] */) {\n        labelEnd = pos;\n        break;\n      } else if (ch === 0x5C /* \\ */) {\n        pos++;\n      }\n    }\n\n    if (labelEnd < 0 || state.src.charCodeAt(labelEnd + 1) !== 0x3A/* : */) {\n      return false;\n    }\n\n    if (silent) { return true; }\n\n    label = state.src.slice(labelStart, labelEnd).replace(/\\\\(.)/g, '$1');\n    title = state.src.slice(labelEnd + 2, max).trim();\n    if (label.length === 0) { return false; }\n    if (title.length === 0) { return false; }\n    if (!state.env.abbreviations) { state.env.abbreviations = {}; }\n    // prepend ':' to avoid conflict with Object.prototype members\n    if (typeof state.env.abbreviations[':' + label] === 'undefined') {\n      state.env.abbreviations[':' + label] = title;\n    }\n\n    state.line = startLine + 1;\n    return true;\n  }\n\n\n  function abbr_replace(state) {\n    var i, j, l, tokens, token, text, nodes, pos, reg, m, regText, regSimple,\n        currentToken,\n        blockTokens = state.tokens;\n\n    if (!state.env.abbreviations) { return; }\n\n    regSimple = new RegExp('(?:' +\n      Object.keys(state.env.abbreviations).map(function (x) {\n        return x.substr(1);\n      }).sort(function (a, b) {\n        return b.length - a.length;\n      }).map(escapeRE).join('|') +\n    ')');\n\n    regText = '(^|' + UNICODE_PUNCT_RE + '|' + UNICODE_SPACE_RE +\n                    '|[' + OTHER_CHARS.split('').map(escapeRE).join('') + '])'\n            + '(' + Object.keys(state.env.abbreviations).map(function (x) {\n                      return x.substr(1);\n                    }).sort(function (a, b) {\n                      return b.length - a.length;\n                    }).map(escapeRE).join('|') + ')'\n            + '($|' + UNICODE_PUNCT_RE + '|' + UNICODE_SPACE_RE +\n                    '|[' + OTHER_CHARS.split('').map(escapeRE).join('') + '])';\n\n    reg = new RegExp(regText, 'g');\n\n    for (j = 0, l = blockTokens.length; j < l; j++) {\n      if (blockTokens[j].type !== 'inline') { continue; }\n      tokens = blockTokens[j].children;\n\n      // We scan from the end, to keep position when new tags added.\n      for (i = tokens.length - 1; i >= 0; i--) {\n        currentToken = tokens[i];\n        if (currentToken.type !== 'text') { continue; }\n\n        pos = 0;\n        text = currentToken.content;\n        reg.lastIndex = 0;\n        nodes = [];\n\n        // fast regexp run to determine whether there are any abbreviated words\n        // in the current token\n        if (!regSimple.test(text)) { continue; }\n\n        while ((m = reg.exec(text))) {\n          if (m.index > 0 || m[1].length > 0) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(pos, m.index + m[1].length);\n            nodes.push(token);\n          }\n\n          token         = new state.Token('abbr_open', 'abbr', 1);\n          token.attrs   = [ [ 'title', state.env.abbreviations[':' + m[2]] ] ];\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = m[2];\n          nodes.push(token);\n\n          token         = new state.Token('abbr_close', 'abbr', -1);\n          nodes.push(token);\n\n          reg.lastIndex -= m[3].length;\n          pos = reg.lastIndex;\n        }\n\n        if (!nodes.length) { continue; }\n\n        if (pos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(pos);\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n\n  md.block.ruler.before('reference', 'abbr_def', abbr_def, { alt: [ 'paragraph', 'reference' ] });\n\n  md.core.ruler.after('linkify', 'abbr_replace', abbr_replace);\n};\n","// Emoticons -> Emoji mapping.\n//\n// (!) Some patterns skipped, to avoid collisions\n// without increase matcher complicity. Than can change in future.\n//\n// Places to look for more emoticons info:\n//\n// - http://en.wikipedia.org/wiki/List_of_emoticons#Western\n// - https://github.com/wooorm/emoticon/blob/master/Support.md\n// - http://factoryjoe.com/projects/emoticons/\n//\n'use strict';\n\nmodule.exports = {\n  angry:            [ '>:(', '>:-(' ],\n  blush:            [ ':\")', ':-\")' ],\n  broken_heart:     [ '</3', '<\\\\3' ],\n  // :\\ and :-\\ not used because of conflict with markdown escaping\n  confused:         [ ':/', ':-/' ], // twemoji shows question\n  cry:              [ \":'(\", \":'-(\", ':,(', ':,-(' ],\n  frowning:         [ ':(', ':-(' ],\n  heart:            [ '<3' ],\n  imp:              [ ']:(', ']:-(' ],\n  innocent:         [ 'o:)', 'O:)', 'o:-)', 'O:-)', '0:)', '0:-)' ],\n  joy:              [ \":')\", \":'-)\", ':,)', ':,-)', \":'D\", \":'-D\", ':,D', ':,-D' ],\n  kissing:          [ ':*', ':-*' ],\n  laughing:         [ 'x-)', 'X-)' ],\n  neutral_face:     [ ':|', ':-|' ],\n  open_mouth:       [ ':o', ':-o', ':O', ':-O' ],\n  rage:             [ ':@', ':-@' ],\n  smile:            [ ':D', ':-D' ],\n  smiley:           [ ':)', ':-)' ],\n  smiling_imp:      [ ']:)', ']:-)' ],\n  sob:              [ \":,'(\", \":,'-(\", ';(', ';-(' ],\n  stuck_out_tongue: [ ':P', ':-P' ],\n  sunglasses:       [ '8-)', 'B-)' ],\n  sweat:            [ ',:(', ',:-(' ],\n  sweat_smile:      [ ',:)', ',:-)' ],\n  unamused:         [ ':s', ':-S', ':z', ':-Z', ':$', ':-$' ],\n  wink:             [ ';)', ';-)' ]\n};\n","'use strict';\n\nmodule.exports = function emoji_html(tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n","// Convert input options to more useable format\n// and compile search regexp\n\n'use strict';\n\n\nfunction quoteRE(str) {\n  return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&');\n}\n\n\nmodule.exports = function normalize_opts(options) {\n  var emojies = options.defs,\n      shortcuts;\n\n  // Filter emojies by whitelist, if needed\n  if (options.enabled.length) {\n    emojies = Object.keys(emojies).reduce(function (acc, key) {\n      if (options.enabled.indexOf(key) >= 0) {\n        acc[key] = emojies[key];\n      }\n      return acc;\n    }, {});\n  }\n\n  // Flatten shortcuts to simple object: { alias: emoji_name }\n  shortcuts = Object.keys(options.shortcuts).reduce(function (acc, key) {\n    // Skip aliases for filtered emojies, to reduce regexp\n    if (!emojies[key]) { return acc; }\n\n    if (Array.isArray(options.shortcuts[key])) {\n      options.shortcuts[key].forEach(function (alias) {\n        acc[alias] = key;\n      });\n      return acc;\n    }\n\n    acc[options.shortcuts[key]] = key;\n    return acc;\n  }, {});\n\n  var keys = Object.keys(emojies),\n      names;\n\n  // If no definitions are given, return empty regex to avoid replacements with 'undefined'.\n  if (keys.length === 0) {\n    names = '^$';\n  } else {\n    // Compile regexp\n    names = keys\n      .map(function (name) { return ':' + name + ':'; })\n      .concat(Object.keys(shortcuts))\n      .sort()\n      .reverse()\n      .map(function (name) { return quoteRE(name); })\n      .join('|');\n  }\n  var scanRE = RegExp(names);\n  var replaceRE = RegExp(names, 'g');\n\n  return {\n    defs: emojies,\n    shortcuts: shortcuts,\n    scanRE: scanRE,\n    replaceRE: replaceRE\n  };\n};\n","'use strict';\n\n\nvar emoji_html        = require('./lib/render');\nvar emoji_replace     = require('./lib/replace');\nvar normalize_opts    = require('./lib/normalize_opts');\n\n\nmodule.exports = function emoji_plugin(md, options) {\n  var defaults = {\n    defs: {},\n    shortcuts: {},\n    enabled: []\n  };\n\n  var opts = normalize_opts(md.utils.assign({}, defaults, options || {}));\n\n  md.renderer.rules.emoji = emoji_html;\n\n  md.core.ruler.push('emoji', emoji_replace(md, opts.defs, opts.shortcuts, opts.scanRE, opts.replaceRE));\n};\n","// Emojies & shortcuts replacement logic.\n//\n// Note: In theory, it could be faster to parse :smile: in inline chain and\n// leave only shortcuts here. But, who care...\n//\n\n'use strict';\n\n\nmodule.exports = function create_rule(md, emojies, shortcuts, scanRE, replaceRE) {\n  var arrayReplaceAt = md.utils.arrayReplaceAt,\n      ucm = md.utils.lib.ucmicro,\n      ZPCc = new RegExp([ ucm.Z.source, ucm.P.source, ucm.Cc.source ].join('|'));\n\n  function splitTextToken(text, level, Token) {\n    var token, last_pos = 0, nodes = [];\n\n    text.replace(replaceRE, function (match, offset, src) {\n      var emoji_name;\n      // Validate emoji name\n      if (shortcuts.hasOwnProperty(match)) {\n        // replace shortcut with full name\n        emoji_name = shortcuts[match];\n\n        // Don't allow letters before any shortcut (as in no \":/\" in http://)\n        if (offset > 0 && !ZPCc.test(src[offset - 1])) {\n          return;\n        }\n\n        // Don't allow letters after any shortcut\n        if (offset + match.length < src.length && !ZPCc.test(src[offset + match.length])) {\n          return;\n        }\n      } else {\n        emoji_name = match.slice(1, -1);\n      }\n\n      // Add new tokens to pending list\n      if (offset > last_pos) {\n        token         = new Token('text', '', 0);\n        token.content = text.slice(last_pos, offset);\n        nodes.push(token);\n      }\n\n      token         = new Token('emoji', '', 0);\n      token.markup  = emoji_name;\n      token.content = emojies[emoji_name];\n      nodes.push(token);\n\n      last_pos = offset + match.length;\n    });\n\n    if (last_pos < text.length) {\n      token         = new Token('text', '', 0);\n      token.content = text.slice(last_pos);\n      nodes.push(token);\n    }\n\n    return nodes;\n  }\n\n  return function emoji_replace(state) {\n    var i, j, l, tokens, token,\n        blockTokens = state.tokens,\n        autolinkLevel = 0;\n\n    for (j = 0, l = blockTokens.length; j < l; j++) {\n      if (blockTokens[j].type !== 'inline') { continue; }\n      tokens = blockTokens[j].children;\n\n      // We scan from the end, to keep position when new tags added.\n      // Use reversed logic in links start/end match\n      for (i = tokens.length - 1; i >= 0; i--) {\n        token = tokens[i];\n\n        if (token.type === 'link_open' || token.type === 'link_close') {\n          if (token.info === 'auto') { autolinkLevel -= token.nesting; }\n        }\n\n        if (token.type === 'text' && autolinkLevel === 0 && scanRE.test(token.content)) {\n          // replace current node\n          blockTokens[j].children = tokens = arrayReplaceAt(\n            tokens, i, splitTextToken(token.content, token.level, state.Token)\n          );\n        }\n      }\n    }\n  };\n};\n","'use strict';\n\n\nvar emojies_defs      = require('./lib/data/full.json');\nvar emojies_shortcuts = require('./lib/data/shortcuts');\nvar bare_emoji_plugin = require('./bare');\n\n\nmodule.exports = function emoji_plugin(md, options) {\n  var defaults = {\n    defs: emojies_defs,\n    shortcuts: emojies_shortcuts,\n    enabled: []\n  };\n\n  var opts = md.utils.assign({}, defaults, options || {});\n\n  bare_emoji_plugin(md, opts);\n};\n","// Process block-level custom containers\n//\n'use strict';\n\n\nmodule.exports = function container_plugin(md, name, options) {\n\n  // Second param may be useful if you decide\n  // to increase minimal allowed marker length\n  function validateDefault(params/*, markup*/) {\n    return params.trim().split(' ', 2)[0] === name;\n  }\n\n  function renderDefault(tokens, idx, _options, env, slf) {\n\n    // add a class to the opening tag\n    if (tokens[idx].nesting === 1) {\n      tokens[idx].attrJoin('class', name);\n    }\n\n    return slf.renderToken(tokens, idx, _options, env, slf);\n  }\n\n  options = options || {};\n\n  var min_markers = 3,\n      marker_str  = options.marker || ':',\n      marker_char = marker_str.charCodeAt(0),\n      marker_len  = marker_str.length,\n      validate    = options.validate || validateDefault,\n      render      = options.render || renderDefault;\n\n  function container(state, startLine, endLine, silent) {\n    var pos, nextLine, marker_count, markup, params, token,\n        old_parent, old_line_max,\n        auto_closed = false,\n        start = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    // Check out the first character quickly,\n    // this should filter out most of non-containers\n    //\n    if (marker_char !== state.src.charCodeAt(start)) { return false; }\n\n    // Check out the rest of the marker string\n    //\n    for (pos = start + 1; pos <= max; pos++) {\n      if (marker_str[(pos - start) % marker_len] !== state.src[pos]) {\n        break;\n      }\n    }\n\n    marker_count = Math.floor((pos - start) / marker_len);\n    if (marker_count < min_markers) { return false; }\n    pos -= (pos - start) % marker_len;\n\n    markup = state.src.slice(start, pos);\n    params = state.src.slice(pos, max);\n    if (!validate(params, markup)) { return false; }\n\n    // Since start is found, we can report success here in validation mode\n    //\n    if (silent) { return true; }\n\n    // Search for the end of the block\n    //\n    nextLine = startLine;\n\n    for (;;) {\n      nextLine++;\n      if (nextLine >= endLine) {\n        // unclosed block should be autoclosed by end of document.\n        // also block seems to be autoclosed by end of parent\n        break;\n      }\n\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (start < max && state.sCount[nextLine] < state.blkIndent) {\n        // non-empty line with negative indent should stop the list:\n        // - ```\n        //  test\n        break;\n      }\n\n      if (marker_char !== state.src.charCodeAt(start)) { continue; }\n\n      if (state.sCount[nextLine] - state.blkIndent >= 4) {\n        // closing fence should be indented less than 4 spaces\n        continue;\n      }\n\n      for (pos = start + 1; pos <= max; pos++) {\n        if (marker_str[(pos - start) % marker_len] !== state.src[pos]) {\n          break;\n        }\n      }\n\n      // closing code fence must be at least as long as the opening one\n      if (Math.floor((pos - start) / marker_len) < marker_count) { continue; }\n\n      // make sure tail has spaces only\n      pos -= (pos - start) % marker_len;\n      pos = state.skipSpaces(pos);\n\n      if (pos < max) { continue; }\n\n      // found!\n      auto_closed = true;\n      break;\n    }\n\n    old_parent = state.parentType;\n    old_line_max = state.lineMax;\n    state.parentType = 'container';\n\n    // this will prevent lazy continuations from ever going past our end marker\n    state.lineMax = nextLine;\n\n    token        = state.push('container_' + name + '_open', 'div', 1);\n    token.markup = markup;\n    token.block  = true;\n    token.info   = params;\n    token.map    = [ startLine, nextLine ];\n\n    state.md.block.tokenize(state, startLine + 1, nextLine);\n\n    token        = state.push('container_' + name + '_close', 'div', -1);\n    token.markup = state.src.slice(start, pos);\n    token.block  = true;\n\n    state.parentType = old_parent;\n    state.lineMax = old_line_max;\n    state.line = nextLine + (auto_closed ? 1 : 0);\n\n    return true;\n  }\n\n  md.block.ruler.before('fence', 'container_' + name, container, {\n    alt: [ 'paragraph', 'reference', 'blockquote', 'list' ]\n  });\n  md.renderer.rules['container_' + name + '_open'] = render;\n  md.renderer.rules['container_' + name + '_close'] = render;\n};\n","'use strict';\n\n\nmodule.exports = function ins_plugin(md) {\n  // Insert each marker as a separate text token, and add it to delimiter list\n  //\n  function tokenize(state, silent) {\n    var i, scanned, token, len, ch,\n        start = state.pos,\n        marker = state.src.charCodeAt(start);\n\n    if (silent) { return false; }\n\n    if (marker !== 0x2B/* + */) { return false; }\n\n    scanned = state.scanDelims(state.pos, true);\n    len = scanned.length;\n    ch = String.fromCharCode(marker);\n\n    if (len < 2) { return false; }\n\n    if (len % 2) {\n      token         = state.push('text', '', 0);\n      token.content = ch;\n      len--;\n    }\n\n    for (i = 0; i < len; i += 2) {\n      token         = state.push('text', '', 0);\n      token.content = ch + ch;\n\n      if (!scanned.can_open && !scanned.can_close) { continue; }\n\n      state.delimiters.push({\n        marker: marker,\n        length: 0, // disable \"rule of 3\" length checks meant for emphasis\n        jump:   i,\n        token:  state.tokens.length - 1,\n        end:    -1,\n        open:   scanned.can_open,\n        close:  scanned.can_close\n      });\n    }\n\n    state.pos += scanned.length;\n\n    return true;\n  }\n\n\n  // Walk through delimiter list and replace text tokens with tags\n  //\n  function postProcess(state, delimiters) {\n    var i, j,\n        startDelim,\n        endDelim,\n        token,\n        loneMarkers = [],\n        max = delimiters.length;\n\n    for (i = 0; i < max; i++) {\n      startDelim = delimiters[i];\n\n      if (startDelim.marker !== 0x2B/* + */) {\n        continue;\n      }\n\n      if (startDelim.end === -1) {\n        continue;\n      }\n\n      endDelim = delimiters[startDelim.end];\n\n      token         = state.tokens[startDelim.token];\n      token.type    = 'ins_open';\n      token.tag     = 'ins';\n      token.nesting = 1;\n      token.markup  = '++';\n      token.content = '';\n\n      token         = state.tokens[endDelim.token];\n      token.type    = 'ins_close';\n      token.tag     = 'ins';\n      token.nesting = -1;\n      token.markup  = '++';\n      token.content = '';\n\n      if (state.tokens[endDelim.token - 1].type === 'text' &&\n          state.tokens[endDelim.token - 1].content === '+') {\n\n        loneMarkers.push(endDelim.token - 1);\n      }\n    }\n\n    // If a marker sequence has an odd number of characters, it's splitted\n    // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n    // start of the sequence.\n    //\n    // So, we have to move all those markers after subsequent s_close tags.\n    //\n    while (loneMarkers.length) {\n      i = loneMarkers.pop();\n      j = i + 1;\n\n      while (j < state.tokens.length && state.tokens[j].type === 'ins_close') {\n        j++;\n      }\n\n      j--;\n\n      if (i !== j) {\n        token = state.tokens[j];\n        state.tokens[j] = state.tokens[i];\n        state.tokens[i] = token;\n      }\n    }\n  }\n\n  md.inline.ruler.before('emphasis', 'ins', tokenize);\n  md.inline.ruler2.before('emphasis', 'ins', function (state) {\n    var curr,\n        tokens_meta = state.tokens_meta,\n        max = (state.tokens_meta || []).length;\n\n    postProcess(state, state.delimiters);\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n        postProcess(state, tokens_meta[curr].delimiters);\n      }\n    }\n  });\n};\n","'use strict';\n\n\nmodule.exports = function ins_plugin(md) {\n  // Insert each marker as a separate text token, and add it to delimiter list\n  //\n  function tokenize(state, silent) {\n    var i, scanned, token, len, ch,\n        start = state.pos,\n        marker = state.src.charCodeAt(start);\n\n    if (silent) { return false; }\n\n    if (marker !== 0x3D/* = */) { return false; }\n\n    scanned = state.scanDelims(state.pos, true);\n    len = scanned.length;\n    ch = String.fromCharCode(marker);\n\n    if (len < 2) { return false; }\n\n    if (len % 2) {\n      token         = state.push('text', '', 0);\n      token.content = ch;\n      len--;\n    }\n\n    for (i = 0; i < len; i += 2) {\n      token         = state.push('text', '', 0);\n      token.content = ch + ch;\n\n      if (!scanned.can_open && !scanned.can_close) { continue; }\n\n      state.delimiters.push({\n        marker: marker,\n        length: 0, // disable \"rule of 3\" length checks meant for emphasis\n        jump:   i,\n        token:  state.tokens.length - 1,\n        end:    -1,\n        open:   scanned.can_open,\n        close:  scanned.can_close\n      });\n    }\n\n    state.pos += scanned.length;\n\n    return true;\n  }\n\n\n  // Walk through delimiter list and replace text tokens with tags\n  //\n  function postProcess(state, delimiters) {\n    var i, j,\n        startDelim,\n        endDelim,\n        token,\n        loneMarkers = [],\n        max = delimiters.length;\n\n    for (i = 0; i < max; i++) {\n      startDelim = delimiters[i];\n\n      if (startDelim.marker !== 0x3D/* = */) {\n        continue;\n      }\n\n      if (startDelim.end === -1) {\n        continue;\n      }\n\n      endDelim = delimiters[startDelim.end];\n\n      token         = state.tokens[startDelim.token];\n      token.type    = 'mark_open';\n      token.tag     = 'mark';\n      token.nesting = 1;\n      token.markup  = '==';\n      token.content = '';\n\n      token         = state.tokens[endDelim.token];\n      token.type    = 'mark_close';\n      token.tag     = 'mark';\n      token.nesting = -1;\n      token.markup  = '==';\n      token.content = '';\n\n      if (state.tokens[endDelim.token - 1].type === 'text' &&\n          state.tokens[endDelim.token - 1].content === '=') {\n\n        loneMarkers.push(endDelim.token - 1);\n      }\n    }\n\n    // If a marker sequence has an odd number of characters, it's splitted\n    // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n    // start of the sequence.\n    //\n    // So, we have to move all those markers after subsequent s_close tags.\n    //\n    while (loneMarkers.length) {\n      i = loneMarkers.pop();\n      j = i + 1;\n\n      while (j < state.tokens.length && state.tokens[j].type === 'mark_close') {\n        j++;\n      }\n\n      j--;\n\n      if (i !== j) {\n        token = state.tokens[j];\n        state.tokens[j] = state.tokens[i];\n        state.tokens[i] = token;\n      }\n    }\n  }\n\n  md.inline.ruler.before('emphasis', 'mark', tokenize);\n  md.inline.ruler2.before('emphasis', 'mark', function (state) {\n    var curr,\n        tokens_meta = state.tokens_meta,\n        max = (state.tokens_meta || []).length;\n\n    postProcess(state, state.delimiters);\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n        postProcess(state, tokens_meta[curr].delimiters);\n      }\n    }\n  });\n};\n","/*\r\n * MIT License\r\n * Copyright (c) 2020 Excellens\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n\r\nimport * as Elementary from '@excellens/elementary'\r\nimport MarkdownIt from 'markdown-it'\r\nimport MarkdownItSub from 'markdown-it-sub'\r\nimport MarkdownItSup from 'markdown-it-sup'\r\nimport MarkdownItFootnote from 'markdown-it-footnote'\r\nimport MarkdownItDeflist from 'markdown-it-deflist'\r\nimport MarkdownItAbbr from 'markdown-it-abbr'\r\nimport MarkdownItEmoji from 'markdown-it-emoji'\r\nimport MarkdownItContainer from 'markdown-it-container'\r\nimport MarkdownItIns from 'markdown-it-ins'\r\nimport MarkdownItMark from 'markdown-it-mark'\r\n\r\nexport function Instance() {\r\n    const self = (function () {\r\n        const instance = MarkdownIt();\r\n        instance.use(MarkdownItSub);\r\n        instance.use(MarkdownItSup);\r\n        instance.use(MarkdownItFootnote);\r\n        instance.use(MarkdownItDeflist);\r\n        instance.use(MarkdownItAbbr);\r\n        instance.use(MarkdownItEmoji);\r\n        instance.use(MarkdownItContainer);\r\n        instance.use(MarkdownItIns);\r\n        instance.use(MarkdownItMark);\r\n        return instance;\r\n    }());\r\n\r\n    return Elementary.Base.Merge(this, self);\r\n}\r\n\r\nimport {version} from '../package.json'\r\n\r\nexport const metadata = {\r\n    version: version,\r\n};\r\n"],"names":["encodeCache","encode","string","exclude","keepEscaped","i","l","code","nextCode","cache","result","defaultChars","ch","String","fromCharCode","test","push","toString","toUpperCase","slice","length","charCodeAt","getEncodeCache","encodeURIComponent","componentChars","decodeCache","decode","getDecodeCache","replace","seq","b1","b2","b3","b4","chr","parseInt","Url","this","protocol","slashes","auth","port","hostname","hash","search","pathname","protocolPattern","portPattern","simplePathPattern","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","javascript","javascript:","slashedProtocol","http","https","ftp","gopher","file","http:","https:","ftp:","gopher:","file:","prototype","parse","url","slashesDenoteHost","lowerProto","hec","rest","trim","split","simplePath","exec","proto","toLowerCase","substr","match","atSign","hostEnd","indexOf","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","j","k","validParts","notHost","bit","unshift","join","qm","require$$0","require$$1","u","require$$3","require$$4","_hasOwnProperty","Object","hasOwnProperty","has","object","key","call","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","RegExp","source","DIGITAL_ENTITY_TEST_RE","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","&","<",">","\"","replaceUnsafeChar","REGEXP_ESCAPE_RE","exports","lib","mdurl","ucmicro","obj","sources","Array","arguments","forEach","TypeError","keys","_class","str","escaped","entity","name","entities","replaceEntityPattern","src","pos","newElements","UNICODE_PUNCT_RE","unescapeAll","state","start","disableNested","level","found","marker","prevPos","labelEnd","max","posMax","oldPos","md","inline","skipToken","ok","lines","assign","escapeHtml","default_rules","Renderer","rules","code_inline","tokens","idx","options","env","slf","token","renderAttrs","content","code_block","fence","highlighted","arr","tmpAttrs","tmpToken","info","langName","langAttrs","highlight","attrIndex","attrs","langPrefix","image","renderInlineAsText","children","renderToken","hardbreak","xhtmlOut","softbreak","breaks","text","html_block","html_inline","nextToken","needLf","hidden","block","nesting","tag","type","renderInline","len","render","Ruler","__rules__","__cache__","__find__","__compile__","self","chains","rule","enabled","alt","altName","chain","fn","at","index","opt","Error","before","beforeName","ruleName","splice","after","afterName","enable","list","ignoreInvalid","isArray","enableOnly","disable","getRules","chainName","NEWLINES_RE","NULL_RE","arrayReplaceAt","isLinkClose","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","p","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","isWhiteSpace","isPunctChar","isMdAsciiPunct","QUOTE_TEST_RE","QUOTE_RE","replaceAt","process_inlines","t","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","lastIndex","single","quotes","Token","map","markup","meta","attrPush","attrData","attrSet","value","attrGet","attrJoin","StateCore","inlineMode","_rules","tok","currentToken","nodes","ln","lastPos","htmlLinkLevel","fullUrl","urlText","links","blockTokens","linkify","pretest","normalizeLink","validateLink","schema","normalizeLinkText","blkIdx","typographer","Core","ruler","process","State","require$$6","isSpace","getLine","line","bMarks","tShift","eMarks","escapedSplit","isEscaped","current","substring","skipBulletListMarker","startLine","skipOrderedListMarker","normalizeReference","open_tag","close_tag","HTML_OPEN_CLOSE_TAG_RE","HTML_SEQUENCES","StateBlock","s","indent","offset","indent_found","sCount","bsCount","blkIndent","lineMax","tight","ddIndent","listIndent","parentType","isEmpty","skipEmptyLines","from","skipSpaces","skipSpacesBack","min","skipChars","skipCharsBack","getLines","begin","end","keepLastLF","lineIndent","first","last","queue","lineStart","endLine","silent","lineText","nextLine","columns","columnCount","aligns","tableLines","tbodyLines","oldParentType","terminate","terminatorRules","shift","pop","params","mem","haveEndMarker","adjustTab","initial","lastLineEmpty","oldBMarks","oldBSCount","oldIndent","oldSCount","oldTShift","spaceAfterMarker","isOutdented","oldLineMax","tokenize","cnt","contentStart","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","Number","Math","markTightParagraphs","_endLine","destEndPos","destEndLineNo","href","label","res","title","helpers","parseLinkDestination","parseLinkTitle","references","tmp","html","ParserBlock","hasEmptyLines","maxNesting","outTokens","require$$11","isTerminatorChar","ESCAPED","postProcess","delimiters","startDelim","endDelim","loneMarkers","scanned","scanDelims","jump","open","can_open","close","can_close","curr","tokens_meta","isStrong","EMAIL_RE","AUTOLINK_RE","HTML_TAG_RE","DIGITAL_RE","NAMED_RE","processDelimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","StateInline","pending","pendingLevel","_prev_delimiters","pushPending","token_meta","canSplitWord","count","left_flanking","right_flanking","pmax","matchStart","matchEnd","require$$5","labelStart","ref","parseReference","parseLinkLabel","tail","linkMatch","emailMatch","lc","isLetter","_rules2","ParserInline","ruler2","require$$13","isFunction","escapeRE","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","re","src_auth","src_host_port_strict","src_path","//","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto:","mailto","src_email_name","src_host_strict","tlds_default","compile","opts","src_Any","src_Cc","src_Z","require$$2","src_P","src_ZPCc","src_ZCc","src_pseudo_letter","src_ip4","src_xn","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","tpl_host_fuzzy_test","tpl_email_fuzzy","tpl_link_fuzzy","tpl_link_no_ip_fuzzy","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","email_fuzzy","link_fuzzy","link_no_ip_fuzzy","host_fuzzy_test","aliases","schemaError","val","__compiled__","__schemas__","compiled","link","isRegExp","createValidator","normalize","isString","alias","slist","filter","schema_test","schema_search","__index__","__text_cache__","resetScanCache","Match","__last_index__","__schema__","raw","createMatch","LinkifyIt","schemas","reduce","acc","add","definition","set","m","ml","me","next","tld_pos","testSchemaAt","keepOld","sort","el","reverse","maxInt","base","regexPunycode","regexNonASCII","regexSeparators","errors","overflow","not-basic","invalid-input","floor","stringFromCharCode","error","RangeError","array","mapDomain","parts","ucs2decode","extra","output","counter","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","input","out","basic","oldi","w","baseMinusT","codePoint","inputLength","n","bias","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","toUnicode","toASCII","version","ucs2","config","default","components","core","zero","rules2","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","RECODE_HOSTNAME_FOR","parsed","punycode","er","format","MarkdownIt","presetName","utils","ParserCore","renderer","configure","presets","missed","use","plugin","args","apply","parseInline","UNESCAPE_RE","subscript","superscript","render_footnote_anchor_name","id","prefix","docId","render_footnote_caption","subId","render_footnote_ref","footnote_anchor_name","caption","footnote_caption","refid","render_footnote_block_open","render_footnote_block_close","render_footnote_open","render_footnote_close","render_footnote_anchor","footnote_ref","footnote_block_open","footnote_block_close","footnote_open","footnote_close","footnote_anchor","oldBMark","posAfterColon","footnotes","refs","footnoteId","footnoteSubId","lastParagraph","currentLabel","insideRef","refTokens","skipMarker","ddLine","dtLine","oldDDIndent","OTHER_CHARS","P","UNICODE_SPACE_RE","Z","abbreviations","reg","regText","regSimple","x","a","b","angry","blush","broken_heart","confused","cry","frowning","heart","imp","innocent","joy","kissing","laughing","neutral_face","open_mouth","rage","smile","smiley","smiling_imp","sob","stuck_out_tongue","sunglasses","sweat","sweat_smile","unamused","wink","shortcuts","emojies","defs","names","scanRE","replaceRE","normalize_opts","emoji","emoji_html","ucm","ZPCc","Cc","splitTextToken","last_pos","emoji_name","autolinkLevel","emoji_replace","defaults","emojies_defs","emojies_shortcuts","bare_emoji_plugin","marker_str","marker_char","marker_len","_options","marker_count","old_parent","old_line_max","auto_closed","metadata","instance","MarkdownItSub","MarkdownItSup","MarkdownItFootnote","MarkdownItDeflist","MarkdownItAbbr","MarkdownItEmoji","MarkdownItContainer","MarkdownItIns","MarkdownItMark","Elementary.Base","Merge"],"mappings":"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"}